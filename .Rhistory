# mutate(eu_up = round (abs(eu_up) + eu_up) / 2) %>% ### Turns negatives into 0
mutate(rd_date = round_date(Date, unit = 'month')) %>%
group_by(rd_date) %>%
summarize(cac_up = mean(cac_up),
dax_up = mean(dax_up),
sp_up = mean(sp_up),
eu_up = mean(eu_up),
all_up = mean(all_up)) %>%
arrange(desc(eu_up)) %>%
ggplot(mapping = aes(x = rd_date)) +
geom_line(mapping = aes(y = log(cac_up)), na.rm = T, size = 1, color = 'orange') +
geom_line(mapping = aes(y = log(dax_up)), na.rm = T, size = 1, color = 'dodgerblue') +
geom_line(mapping = aes(y = log(sp_up)), na.rm = T, size = 1, color = 'forestgreen') +
ylim(0,10)
my_data %>%
filter(Date > ymd('2010-01-01') & Date < ymd('2018-01-01')) %>%
mutate(cac_up = (my_data[[1, 3]] / cac - 1) / (my_data[[1, 2]] / ftse - 1),
dax_up = (my_data[[1, 4]] / dax - 1) / (my_data[[1, 2]] / ftse - 1),
sp_up = (my_data[[2, 4]] / sp500 - 1) / (my_data[[1, 2]] / ftse - 1),
eu_up = cac_up + dax_up,
all_up = eu_up + sp_up) %>%
arrange(desc(eu_up)) %>%
# mutate(eu_up = round (abs(eu_up) + eu_up) / 2) %>% ### Turns negatives into 0
mutate(rd_date = round_date(Date, unit = 'month')) %>%
group_by(rd_date) %>%
summarize(cac_up = mean(cac_up),
dax_up = mean(dax_up),
sp_up = mean(sp_up),
eu_up = mean(eu_up),
all_up = mean(all_up)) %>%
arrange(desc(eu_up))
my_data %>%
filter(Date > ymd('2010-01-01') & Date < ymd('2018-01-01')) %>%
mutate(cac_up = (my_data[[1, 3]] / cac - 1) / (my_data[[1, 2]] / ftse - 1),
dax_up = (my_data[[1, 4]] / dax - 1) / (my_data[[1, 2]] / ftse - 1),
sp_up = (my_data[[2, 4]] / sp500 - 1) / (my_data[[1, 2]] / ftse - 1),
eu_up = cac_up + dax_up,
all_up = eu_up + sp_up) %>%
arrange(desc(eu_up)) %>%
# mutate(eu_up = round (abs(eu_up) + eu_up) / 2) %>% ### Turns negatives into 0
mutate(rd_date = round_date(Date, unit = 'month')) %>%
group_by(rd_date) %>%
summarize(cac_up = mean(cac_up),
dax_up = mean(dax_up),
sp_up = mean(sp_up),
eu_up = mean(eu_up),
all_up = mean(all_up)) %>%
arrange(desc(eu_up)) %>%
ggplot(mapping = aes(x = rd_date)) +
geom_line(mapping = aes(y = log(cac_up)), na.rm = T, size = 1, color = 'orange') +
geom_line(mapping = aes(y = log(dax_up)), na.rm = T, size = 1, color = 'dodgerblue') +
geom_line(mapping = aes(y = log(sp_up)), na.rm = T, size = 1, color = 'forestgreen') +
ylim(-1,10)
my_data %>%
filter(Date > ymd('2010-01-01') & Date < ymd('2018-01-01')) %>%
mutate(cac_up = (my_data[[1, 3]] / cac - 1) / (my_data[[1, 2]] / ftse - 1),
dax_up = (my_data[[1, 4]] / dax - 1) / (my_data[[1, 2]] / ftse - 1),
sp_up = (my_data[[2, 4]] / sp500 - 1) / (my_data[[1, 2]] / ftse - 1),
eu_up = cac_up + dax_up,
all_up = eu_up + sp_up) %>%
arrange(desc(eu_up)) %>%
# mutate(eu_up = round (abs(eu_up) + eu_up) / 2) %>% ### Turns negatives into 0
mutate(rd_date = round_date(Date, unit = 'month')) %>%
group_by(rd_date) %>%
summarize(cac_up = mean(cac_up),
dax_up = mean(dax_up),
sp_up = mean(sp_up),
eu_up = mean(eu_up),
all_up = mean(all_up)) %>%
arrange(desc(eu_up)) %>%
ggplot(mapping = aes(x = rd_date)) +
geom_line(mapping = aes(y = log(cac_up)), na.rm = T, size = 1, color = 'orange') +
geom_line(mapping = aes(y = log(dax_up)), na.rm = T, size = 1, color = 'dodgerblue') +
geom_line(mapping = aes(y = log(sp_up)), na.rm = T, size = 1, color = 'forestgreen')
my_data %>%
filter(Date > ymd('2010-01-01') & Date < ymd('2018-01-01')) %>%
mutate(cac_up = (my_data[[1, 3]] / cac - 1) / (my_data[[1, 2]] / ftse - 1),
dax_up = (my_data[[1, 4]] / dax - 1) / (my_data[[1, 2]] / ftse - 1),
sp_up = (my_data[[2, 4]] / sp500 - 1) / (my_data[[1, 2]] / ftse - 1),
eu_up = cac_up + dax_up,
all_up = eu_up + sp_up) %>%
arrange(desc(eu_up)) %>%
# mutate(eu_up = round (abs(eu_up) + eu_up) / 2) %>% ### Turns negatives into 0
mutate(rd_date = round_date(Date, unit = 'month')) %>%
group_by(rd_date) %>%
summarize(cac_up = mean(cac_up),
dax_up = mean(dax_up),
sp_up = mean(sp_up),
eu_up = mean(eu_up),
all_up = mean(all_up)) %>%
arrange(desc(eu_up)) %>%
ggplot(mapping = aes(x = rd_date)) +
geom_line(mapping = aes(y = log(cac_up)), na.rm = T, size = 2, color = 'orange') +
geom_line(mapping = aes(y = log(dax_up)), na.rm = T, size = 2, color = 'dodgerblue') +
geom_line(mapping = aes(y = log(sp_up)), na.rm = T, size = 2, color = 'forestgreen')
library(tidyverse); library(lubridate); library(ggalluvial); library(ggthemes); library(moments); library(ggcorrplot); library(scales)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse); library(lubridate); library(ggalluvial); library(ggthemes); library(moments); library(ggcorrplot); library(scales)
flights <- read_csv(file = 'flights_wide.csv', trim_ws = T)
# airlines_17 <- read_csv(file = 'airlines_17.csv', trim_ws = T)
# airports_17 <- read_csv(file = 'airports_17.csv', trim_ws = T, col_names = c('airport_name', 'airport_iata', 'airport_st'))
## This converts hmm or c(h, mm) to a metric value h.hh
metric_time <- function(horhm, mm = rep(-1, length(horhm))){
if(mm < 0){ return(trunc(horhm/100) + (horhm/100 - trunc(horhm/100)) * 5 / 3) }
else{ return(horhm + mm/60) }
}
## Make metric month function
metric_month <- function(mo, mo_day){ return(mo + (mo_day - 0.5) / max(mo_day)) }
## build a test set
test_17 <- flights %>%
filter(!is.na(dep_delay)) %>% ## Remove flights that are missing dep_delay
group_by(month) %>%
mutate(on_time = dep_delay <= 1, ## This and the next line split the data set into on-time flights...
ln_delay = if_else(dep_delay > 1, log(dep_delay), NA_real_), ## ...and log-length of delay, if delay
diff_5mo = abs(5.31 - month),
wkday = weekdays(time_hour),
month_metric = metric_month(month, day),  ## Using my function
time_metric = metric_time(sched_dep_time), ## Using my function
diff_21h = abs(21.45 - time_metric)) %>%
ungroup() %>%
select(-(1:5), -(7:9), -(11:12), -(hour:minute)) %>%
left_join(weather, by = c('time_hour', 'origin'))
flights %>%
filter(!is.na(dep_delay))
test_17 <- flights %>%
filter(!is.na(dep_delay)) %>% ## Remove flights that are missing dep_delay
mutate(month = month(time_hour)) %>%
group_by(month) %>%
mutate(on_time = dep_delay <= 1, ## This and the next line split the data set into on-time flights...
ln_delay = if_else(dep_delay > 1, log(dep_delay), NA_real_), ## ...and log-length of delay, if delay
diff_5mo = abs(5.31 - month),
wkday = weekdays(time_hour),
month_metric = metric_month(month, day),  ## Using my function
time_metric = metric_time(sched_dep_time), ## Using my function
diff_21h = abs(21.45 - time_metric)) %>%
ungroup() %>%
select(-(1:5), -(7:9), -(11:12), -(hour:minute)) %>%
left_join(weather, by = c('time_hour', 'origin'))
flights %>%
filter(!is.na(dep_delay)) %>% ## Remove flights that are missing dep_delay
mutate(month = month(time_hour))
test_17 <- flights %>%
filter(!is.na(dep_delay)) %>% ## Remove flights that are missing dep_delay
mutate(month = month(time_hour),
day = day(time_hour)) %>%
group_by(month) %>%
mutate(on_time = dep_delay <= 1, ## This and the next line split the data set into on-time flights...
ln_delay = if_else(dep_delay > 1, log(dep_delay), NA_real_), ## ...and log-length of delay, if delay
diff_5mo = abs(5.31 - month),
wkday = weekdays(time_hour),
month_metric = metric_month(month, day),  ## Using my function
time_metric = metric_time(sched_dep_time), ## Using my function
diff_21h = abs(21.45 - time_metric)) %>%
ungroup()
test_17
## Build a correlogram
test_17 %>%
filter(carrier == 'B6') %>%
select(on_time:ln_delay,
air_time:distance,
month_metric:time_metric,
temp:visib) %>%
cor(use = "pairwise.complete.obs") %>%
round(0) %>%
ggcorrplot(lab = TRUE,
#method="circle",
type = "lower",
lab_size = 3,
colors = c("orange", "white", "dodgerblue"),
title="Correlogram of flight and weather data",
ggtheme = theme_bw())
## Build a correlogram
test_17 %>%
filter(carrier == 'B6') %>%
select(on_time:ln_delay,
air_time:distance,
month_metric:time_metric,
temp:visib) %>%
cor(use = "pairwise.complete.obs") %>%
round(1) %>%
ggcorrplot(lab = TRUE,
#method="circle",
type = "lower",
lab_size = 3,
colors = c("orange", "white", "dodgerblue"),
title="Correlogram of flight and weather data",
ggtheme = theme_bw())
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
ggtitle('Each airline has experienced cost growth but none more than JetBlue')
air_fin <- read_csv('air_fin.csv',na = '', col_names = c('carrier', 'year', 'opn_exp', 'opn_inc', 'exp_growth', 'inc_growth'), skip = 1)
air_fin[13:16,1] <- 'United'
air_fin <- read_csv('air_fin.csv',na = '', col_names = c('carrier', 'year', 'opn_exp', 'opn_inc', 'exp_growth', 'inc_growth'), skip = 1)
air_fin <- read_csv('air_fin.csv',na = '', col_names = c('carrier', 'year', 'opn_exp', 'opn_inc', 'exp_growth', 'inc_growth'), skip = 1)
air_fin[13:16,1] <- 'United'
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
ggtitle('Each airline has experienced cost growth but none more than JetBlue')
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
labs(title = 'Each airline has experienced cost growth but none more than JetBlue',
subtitle = 'Cost growth per year in percent')
library(tidyverse); library(lubridate); library(ggalluvial); library(ggthemes); library(moments); library(ggcorrplot); library(scales)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
include = FALSE
)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
include = FALSE
)
flights <- read_csv(file = 'flights_wide.csv', trim_ws = T)
pred_17 %>%
select(diff_21h, time_metric, pred_delay) %>%
unique() %>%
ggplot() +
geom_point(mapping = aes(time_metric, p_on_time, color = 'time'), size = 1) +
geom_smooth(aes(time_metric, p_on_time, color = 'time'), method = 'loess') +
geom_point(mapping = aes(diff_21h, p_on_time, color = 'adj_time'), size = 1) +
geom_smooth(aes(diff_21h, p_on_time, color = 'adj_time'), method = 'loess') +
theme_bw()
air_fin[13:16,1]
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
labs(title = 'Each airline has experienced cost growth but none more than JetBlue',
subtitle = 'Cost growth per year in percent')
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
labs(title = 'Each airline has experienced cost growth but none more than JetBlue',
caption =  = 'Cost growth per year in percent')
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
labs(title = 'Each airline has experienced cost growth but none more than JetBlue',
caption = 'Cost growth per year in percent')
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = percent_format(exp_growth, accuracy = 0), fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
labs(title = 'Each airline has experienced cost growth but none more than JetBlue',
caption = 'Annual operation cost growth per year in percent')
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
labs(title = 'Each airline has experienced cost growth but none more than JetBlue',
caption = 'Annual operation cost growth per year in percent') +
scale_y_continuous(labels = percent_format(accuracy = 1))
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
labs(title = 'Each airline has experienced cost growth but none more than JetBlue',
caption = 'Annual operation cost growth per year in percent') +
scale_y_continuous(labels = percent_format(accuracy = 0))
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
labs(title = 'Each airline has experienced cost growth but none more than JetBlue',
caption = 'Annual operation cost growth per year in percent') +
scale_y_continuous(labels = percent_format(accuracy = 1))
air_fin <- read_csv('air_fin.csv',na = '', col_names = c('carrier', 'year', 'opn_exp', 'opn_inc', 'exp_growth', 'inc_growth'), skip = 1)
air_fin[13:16,1] <- 'UAL'
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
labs(title = 'Each airline has experienced cost growth but none more than JetBlue',
caption = 'Annual operation cost growth per year in percent') +
scale_y_continuous(labels = percent_format(accuracy = 1))
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_area(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
labs(title = 'Each airline has experienced cost growth but none more than JetBlue',
caption = 'Annual operation cost growth per year in percent') +
scale_y_continuous(labels = percent_format(accuracy = 1))
col
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
labs(title = 'Each airline has experienced cost growth but none more than JetBlue',
caption = 'Annual operation cost growth per year in percent') +
scale_y_continuous(labels = percent_format(accuracy = 1))
library(tidyverse); library(lubridate); library(ggalluvial); library(ggthemes); library(moments); library(ggcorrplot); library(scales)
# pred_17 %>%
#   select(diff_21h, time_metric, pred_delay) %>%
#   unique() %>%
#   ggplot() +
#   geom_point(mapping = aes(time_metric, p_on_time, color = 'time'), size = 1) +
#   geom_smooth(aes(time_metric, p_on_time, color = 'time'), method = 'loess') +
#   geom_point(mapping = aes(diff_21h, p_on_time, color = 'adj_time'), size = 1) +
#   geom_smooth(aes(diff_21h, p_on_time, color = 'adj_time'), method = 'loess') +
#   theme_bw()
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
include = FALSE
)
library(tidyverse); library(lubridate); library(ggalluvial); library(ggthemes); library(moments); library(ggcorrplot); library(scales)
air_fin <- read_csv('air_fin.csv',na = '', col_names = c('carrier', 'year', 'opn_exp', 'opn_inc', 'exp_growth', 'inc_growth'), skip = 1)
air_fin[13:16,1] <- 'UAL'
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
labs(title = 'Each airline has experienced cost growth but none more than JetBlue',
caption = 'Annual operation cost growth per year in percent') +
scale_y_continuous(labels = percent_format(accuracy = 1))
flights <- read_csv(file = 'flights_wide.csv', trim_ws = T)
# airlines_17 <- read_csv(file = 'airlines_17.csv', trim_ws = T)
# airports_17 <- read_csv(file = 'airports_17.csv', trim_ws = T, col_names = c('airport_name', 'airport_iata', 'airport_st'))
## build a test set
test_17 <- flights %>%
filter(!is.na(dep_delay)) %>% ## Remove flights that are missing dep_delay
mutate(month = month(time_hour),
day = day(time_hour)) %>%
group_by(month) %>%
mutate(on_time = dep_delay <= 1, ## This and the next line split the data set into on-time flights...
ln_delay = if_else(dep_delay > 1, log(dep_delay), NA_real_), ## ...and log-length of delay, if delay
diff_5mo = abs(5.31 - month),
wkday = weekdays(time_hour),
month_metric = metric_month(month, day),  ## Using my function
time_metric = metric_time(sched_dep_time), ## Using my function
diff_21h = abs(21.45 - time_metric)) %>%
ungroup()
## Build a correlogram
test_17 %>%
filter(carrier == 'B6') %>%
select(on_time:ln_delay,
air_time:distance,
month_metric:time_metric,
temp:visib) %>%
cor(use = "pairwise.complete.obs") %>%
round(1) %>%
ggcorrplot(lab = TRUE,
#method="circle",
type = "lower",
lab_size = 3,
colors = c("orange", "white", "dodgerblue"),
title="Correlogram of flight and weather data",
ggtheme = theme_bw())
test_17 %>%
filter(carrier == 'B6', !is.na(dewp)) %>%
ggplot(mapping = aes(x = temp, y = dewp)) +
geom_smooth(method = 'lm', color = 'darkgray', fill = 'darkgray', alpha = 0.8) +
geom_count(color = 'dodgerblue', show.legend = F, na.rm = T) +
theme_bw() +
labs(title = "The correlation between temperature and dewpoint makes using both redundant",
x = "temperature in degrees",
y = "dewpoint in degrees")
test_17 %>%
mutate(is_b6 = (carrier == 'B6')) %>%
mutate(month_metric = round(month_metric, 1)) %>%
group_by(month_metric, is_b6) %>%
summarize(mean_on_time = mean(on_time)) %>%
group_by(month_metric) %>%
mutate(b6_v_others = if_else(2 * is_b6 == 2,
mean_on_time - mean(mean_on_time),
mean(mean_on_time) - mean_on_time)) %>%
summarize(b6_factor = sum(b6_v_others)) %>%
ggplot(mapping = aes(x = month_metric - 0.5, ymax = b6_factor, ymin = 0)) +
geom_ribbon(fill = 'dodgerblue') +
scale_x_continuous(labels = month.abb[1:12], breaks = 1:12) +
theme_bw() +
labs(title = 'JetBlue lags in on-time departures all year but especially in summer months',
x = 'date',
y = 'on-time departures vs competitors')
test_17 %>%
filter(carrier %in% c('AA', 'B6', 'DL', 'UA') &
!is.na(ln_delay)) %>%
group_by(carrier) %>%
summarize(q1 = quantile(dep_delay, 0.25),
q3 = quantile(dep_delay, 0.75)) %>%
ggplot(mapping = aes(x = q1, xend = q3, y = carrier)) +
geom_dumbbell(colour_x = "dodgerblue",
size = 2,
size_x = 4,
size_xend = 4,
colour_xend = "darkblue",
colour = 'dodgerblue') +
labs(x = NULL,
y = NULL,
title = "Departure delay interquartile range is longest for JetBlue on both ends") +
scale_x_continuous(label = minutes) +
theme_excel_new() +
theme(plot.title = element_text(face = "bold"),
panel.grid.major.x=element_line(),
axis.ticks=element_blank(),
panel.border=element_blank())
opts_chunk$set(
message = FALSE,
warning = FALSE,
include = FALSE
)
library(tidyverse); library(lubridate); library(ggalluvial); library(ggthemes); library(moments); library(ggcorrplot); library(scales); library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
include = FALSE
)
opts_chunk$set(
message = FALSE,
warning = FALSE,
include = FALSE
)
library(tidyverse); library(lubridate); library(ggalluvial); library(ggthemes); library(moments); library(ggcorrplot); library(scales); library(knitr)
opts_chunk$set(message = FALSE, warning = FALSE)
read_csv('air_fin.csv',na = '', col_names = c('carrier', 'year', 'opn_exp', 'opn_inc', 'exp_growth', 'inc_growth'), skip = 1)
air_fin <- read_csv('air_fin.csv',na = '', col_names = c('carrier', 'year', 'opn_exp', 'opn_inc', 'exp_growth', 'inc_growth'), skip = 1)
read_csv('air_fin_raw.csv')
read_csv('air_fin_raw.csv')
air_fin %>%
filter(!is.na(exp_growth)) %>%
ggplot() +
geom_col(mapping = aes(x = year, y = exp_growth, fill = year)) +
facet_wrap(facets = ~carrier, nrow = 1) +
theme_excel_new() +
theme(legend.position = "none") +
labs(title = 'Each airline has experienced cost growth but none more than JetBlue',
caption = 'Annual operation cost growth per year in percent') +
scale_y_continuous(labels = percent_format(accuracy = 1))
air_fin_raw <- read_csv('air_fin_raw.csv')
air_fin_raw
air_fin_raw <- read_csv('air_fin_raw.csv')
air_fin_raw
air_fin_raw %>%
gather(-(1:2), key = "date", value = "amt_1000usd")
air_fin_raw %>%
gather(-(1:2), key = "date", value = "amt_1000usd") %>%
mutate(date = mdy(date))
air_fin <- read_csv('air_fin.csv',na = '', col_names = c('carrier', 'year', 'opn_exp', 'opn_inc', 'exp_growth', 'inc_growth'), skip = 1)
air_fin
air_fin_raw %>%
gather(-(1:2), key = "date", value = "amt_1000usd") %>%
mutate(date = mdy(date))
air_fin
air_fin_raw %>%
gather(-(1:2), key = "date", value = "amt_1000usd")
air_fin_raw %>%
gather(-(1:2), key = "date", value = "amt_1000usd")
air_fin_raw %>%
gather(-(1:2), key = "date", value = "amt_1000usd") %>%
spread(key = 2, value = 4)
air_fin_raw %>%
gather(-(1:2), key = "date", value = "amt_1000usd") %>%
spread(key = 2, value = 4) %>%
mutate(date = mdy(date))
air_fin
air_fin_raw %>%
gather(-(1:2), key = "date", value = "amt_1000usd") %>%
spread(key = 2, value = 4) %>%
mutate(date = mdy(date))
air_fin <- read_csv('air_fin.csv',na = '', col_names = c('carrier', 'year', 'opn_exp', 'opn_inc', 'exp_growth', 'inc_growth'), skip = 1)
air_fin
