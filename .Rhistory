labelly <- my_oecd %>%
group_by(co_code) %>%
summarize(as_of = max(as_of), label_death = max(deaths_weekly_pm))
my_kor <- my_oecd %>%
filter(co_code == "KOR") %>%
select(as_of, cases_weekly, deaths_weekly)
j <- data.table(d_offset = integer(), cor_offset = double())
for (i in 1:9) {
j <- rbind(j, data.table(d_offset = i, cor_offset = my_kor %>%
mutate(d_lag = as_of + weeks(i)) %>%
left_join(my_kor, by = c("d_lag" = "as_of")) %>%
pull(6) %>%
cor(x = ., y = my_kor$cases_weekly, use = "complete.obs")))
}
j
my_kor %>%
mutate(d_as_of = as_of - weeks(1)) %>%
select(deaths_weekly, d_as_of) %>%
full_join((my_kor %>% select(cases_weekly, as_of)), by = c("d_as_of" = "as_of")) %>%
mutate(week_num = week(d_as_of)) %>%
group_by(week_num) %>%
summarize(death_wk = sum(deaths_weekly, na.rm = TRUE),
case_wk = sum(cases_weekly, na.rm = TRUE),
week_of = median(d_as_of, na.rm = TRUE)) %>%
mutate(deaths_ix = death_wk / max(death_wk, na.rm = TRUE),
cases_ix = case_wk / max(case_wk, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = week_of)) +
geom_line(mapping = aes(y = deaths_ix), color = "green") +
geom_line(mapping = aes(y = cases_ix), color = "orange")
raw_labor <- read_csv("nordic_unemp.csv")
nord_labor <- raw_labor %>%
gather(code, "unemp", "dnk", "fin", "isl", "nor", "swe") %>%
mutate(code = toupper(code))
nord_labor %>%
mutate(co_code = code) %>%
group_by(co_code) %>%
filter(!is.na(unemp)) %>%
filter(ymd(DATE) %in% c(max(ymd(DATE), na.rm = TRUE), ymd("2020-01-01"))) %>%
summarize(as_of = max(DATE, na.rm = TRUE), unemp = max(unemp, na.rm = TRUE) - min(unemp, na.rm = TRUE)) %>%
left_join(my_oecd) %>%
ggplot() +
geom_label(mapping = aes(x = deaths_weekly_pm, y = unemp, color = co_code, label = str_c(co_code))) +
labs(x = "COVID-19 cases per million", y = str_c("change in unemployment rate from Jan 2020")) +
theme(legend.position = "none")
my_data %>%
inner_join(results_2016) %>%
inner_join(pop_dens) %>%
filter(as_of == max(as_of)) %>%
mutate(death_pm = death/pop * 1000000,
log_death_pm = log(death_pm, base = 10)) %>%
group_by(code) %>%
mutate(hrc = (t_mgn < 0),
tier = case_when(dens >= 485 ~ "F",
between(dens, 183, 485) ~ "E",
between(dens, 69, 183) ~ "D",
between(dens, 26, 69) ~ "C",
between(dens, 10, 26) ~ "B",
dens < 10 ~ "A")) %>%
ungroup() %>%
ggplot(mapping = aes(x = dens, y = log_death_pm)) +
# , color = hrc, fill = hrc)) +
geom_text_repel(mapping = aes(x = dens, y = log_death_pm, label = code, fill = NULL, color = hrc), position = position_jitter()) +
# geom_smooth(linetype = 3, method = "lm", alpha = 0.1) +
geom_abline(slope = bestfit_slope, intercept = bestfit_intercept, linetype = 3) +
# facet_wrap(vars(tier),  scales = "free_x", nrow = 2) +
labs(x = "Population per square mile", y = "Log of COVID-19 deaths per million", title = "For many states, density is destiny", subtitle = str_c("States plotted by density and COVID-19 deaths along a best-fit line, as of ", case_growth$wk_ending[1])) +
theme(legend.position = "none", strip.text = element_blank()) +
ylim(0, 4)
runApp('~/marior4d/self-guided/us_dash')
?selectInput
coeff_tbl
test_table
library(lubridate)
library(data.table)
library(tidyverse)
library(jsonlite)
library(ggrepel)
library(stringr)
library(ggthemes)
all_data <- fromJSON("https://covidtracking.com/api/v1/states/daily.json") %>% as.data.table()
my_data <- all_data %>%
mutate(as_of = ymd(date), tests = positive + negative, test_ch = positiveIncrease + negativeIncrease) %>%
select(as_of, code = state, cases = positive, case_ch = positiveIncrease, death, death_ch = deathIncrease, tests, test_ch) %>%
data.table()
st_pop_2019 <- read_csv("st_pop.csv") %>%
select(name = 5, pop_2019 = 17) %>%
mutate(pop_2019 = as.integer(pop_2019))
code_names <- data.table(cbind(name = c(state.name, "District of Columbia"),
code = c(state.abb, "DC"),
region = as.character(state.region),
reg_2 = c("South", "Plain and Mountain", "Southwest", "Middle South", "West Coast", "Southwest", "Northeast", "Northeast", "South", "South",
"West Coast", "Plain and Mountain", "Midwest", "Midwest", "Midwest", "Plain and Mountain", "Middle South", "South", "Northeast", "Northeast",
"Northeast", "Midwest", "Midwest", "South", "Midwest", "Plain and Mountain", "Plain and Mountain", "Southwest", "Northeast", "Northeast",
"Southwest", "Northeast", "South", "Plain and Mountain", "Midwest", "Plain and Mountain", "West Coast", "Northeast", "Northeast", "South",
"Plain and Mountain", "Middle South", "Southwest", "Plain and Mountain", "Northeast", "South", "West Coast", "Middle South", "Midwest", "Plain and Mountain",
"Northeast")))
pop_dens <- read_csv(file = "pop_density.csv", col_types = "-cdi-")
lifetime_data <- my_data %>%
inner_join(code_names) %>%
inner_join(st_pop_2019) %>%
filter(lubridate::wday(as_of) == lubridate::wday(max(as_of))) %>%
mutate(is_ca = if_else(code == "CA", "Calif.", "Rest of US")) %>%
group_by(
is_ca,
as_of) %>%
summarize(cases = sum(cases, na.rm = TRUE),
deaths = sum(death, na.rm = TRUE),
tests = sum(tests, na.rm = TRUE),
cases_pm = sum(cases, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE) * 1000000,
deaths_pm =  sum(death, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE) * 1000000,
tests_pm = sum(tests, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE) * 1000000,
pos_rate = cases / tests) %>%
mutate(case_ch_pm = cases_pm - lag(cases_pm),
death_ch_pm = deaths_pm - lag(deaths_pm),
test_ch_pm = tests_pm - lag(tests_pm)) %>%
data.table()
weekly_data <- code_names %>%
inner_join(st_pop_2019) %>%
inner_join(my_data) %>%
group_by(code, reg_2) %>%
filter(as_of >= max(as_of) - weeks(1)) %>%
summarize(test_weekly_growth = round((max(tests) - min(tests)) / min(tests), 2),
test_weekly_pm = signif(((max(tests) - min(tests)) / mean(pop_2019) * 1000000), 3),
case_weekly_growth = round((max(cases) - min(cases)) / min(cases), 2),
case_weekly_pm = signif(((max(cases) - min(cases)) / mean(pop_2019) * 1000000), 3),
death_weekly_growth = round((max(death) - min(death)) / min(death), 2),
death_weekly_pm = signif(((max(death) - min(death)) / mean(pop_2019) * 1000000), 3),
test_weekly = max(tests, na.rm = TRUE) - min(tests, na.rm = TRUE),
case_weekly = max(cases, na.rm = TRUE) - min(cases, na.rm = TRUE),
death_weekly = max(death, na.rm = TRUE) - min(death, na.rm = TRUE),
wk_ending = max(as_of),
pos_rate = sum(case_ch, na.rm = TRUE) / sum(test_ch, na.rm = TRUE)) %>%
data.table()
monthly_data <- code_names %>%
inner_join(st_pop_2019) %>%
inner_join(my_data) %>%
group_by(code, reg_2) %>%
filter(as_of >= max(as_of) - months(1)) %>%
summarize(test_monthly_growth = round((max(tests) - min(tests)) / min(tests), 2),
test_monthly_pm = signif(((max(tests) - min(tests)) / mean(pop_2019) * 1000000), 3),
case_monthly_growth = round((max(cases) - min(cases)) / min(cases), 2),
case_monthly_pm = signif(((max(cases) - min(cases)) / mean(pop_2019) * 1000000), 3),
death_monthly_growth = round((max(death) - min(death)) / min(death), 2),
death_monthly_pm = signif(((max(death) - min(death)) / mean(pop_2019) * 1000000), 3),
mo_ending = max(as_of))
lag_4wk_data <- my_data %>%
select(as_of_lag_4wk = as_of, code, case_ch, test_ch) %>%
filter(case_ch * test_ch > 0,
test_ch >= case_ch) %>%
mutate(pos_rate_4wk = case_ch / test_ch) %>%
filter(pos_rate_4wk < 0.5) %>%
select(-test_ch, -case_ch)
lag_3wk_data <- my_data %>%
select(as_of_lag_3wk = as_of, code, case_ch_3wk = case_ch) %>%
filter(case_ch_3wk > 0)
cor_data <- my_data %>%
select(as_of, code, death_ch) %>%
filter(as_of > max(as_of) - months(6)) %>%
mutate(as_of_lag_4wk = as_of - weeks(4),
as_of_lag_3wk = as_of - weeks(3)) %>%
inner_join(lag_4wk_data) %>%
inner_join(lag_3wk_data)
lag_1wk_data <- my_data %>%
select(as_of_lag_1wk = as_of, code, case_ch, test_ch) %>%
filter(case_ch > 0,
test_ch > 0,
test_ch >= case_ch) %>%
mutate(pos_rate_lag_1wk = case_ch / test_ch) %>%
filter(pos_rate_lag_1wk < 0.5,
!is.na(pos_rate_lag_1wk)) %>%
select(-test_ch, -case_ch)
lead_3wk_data <- my_data %>%
select(as_of_lead_3wk = as_of, code,
death_ch_lead_3wk = death_ch) %>%
filter(death_ch_lead_3wk > 0)
cor_data <- my_data %>%
select(as_of, code, case_ch) %>%
filter(as_of > ymd(20200501),
between(case_ch, 1, 50000)) %>%
mutate(as_of_lag_1wk = as_of - weeks(1),
as_of_lead_3wk = as_of + weeks(3)) %>%
inner_join(lag_1wk_data) %>%
left_join(lead_3wk_data) %>%
arrange(desc(as_of_lead_3wk))
proj_table <- data.table(code = character(),
as_of_lead_3wk = Date(),
death_ch_lead_3wk = integer(),
death_ch_proj = double(),
death_ch_proj_se = double())
for (i in code_names$code) {
temp_tbl <- cor_data %>%
filter(code %in% i)
proj_table <- rbind(proj_table,
data.table(code = temp_tbl$code,
as_of_lead_3wk = temp_tbl$as_of_lead_3wk,
death_ch_lead_3wk = temp_tbl$death_ch_lead_3wk,
death_ch_proj = temp_tbl[,case_ch] *
summary(lm("death_ch_lead_3wk ~ 0 + case_ch + pos_rate_lag_1wk", temp_tbl, na.action = na.omit))[[4]][1] +
temp_tbl[,pos_rate_lag_1wk] *
summary(lm("death_ch_lead_3wk ~ 0 + case_ch + pos_rate_lag_1wk", temp_tbl, na.action = na.omit))[[4]][2],
death_ch_proj_se = temp_tbl[,case_ch] *
summary(lm("death_ch_lead_3wk ~ 0 + case_ch + pos_rate_lag_1wk", temp_tbl, na.action = na.omit))[[4]][3] +
temp_tbl[,pos_rate_lag_1wk] *
summary(lm("death_ch_lead_3wk ~ 0 + case_ch + pos_rate_lag_1wk", temp_tbl, na.action = na.omit))[[4]][4]))
}
## case_ch coeff summary(lm("death_ch_lead_3wk ~ 0 + case_ch + pos_rate_lag_1wk", temp_tbl, na.action = na.omit))[[4]][1]
## case_ch coeff SE summary(lm("death_ch_lead_3wk ~ 0 + case_ch + pos_rate_lag_1wk", temp_tbl, na.action = na.omit))[[4]][3]
## pos_rate_lag_1wk coeff summary(lm("death_ch_lead_3wk ~ 0 + case_ch + pos_rate_lag_1wk", temp_tbl, na.action = na.omit))[[4]][2]
## pos_rate_lag_1wk coeff SE summary(lm("death_ch_lead_3wk ~ 0 + case_ch + pos_rate_lag_1wk", temp_tbl, na.action = na.omit))[[4]][4]
proj_sum <- proj_table %>%
inner_join(code_names) %>%
inner_join(st_pop_2019) %>%
filter(as_of_lead_3wk > max(my_data$as_of, na.rm = TRUE)) %>%
group_by(code, reg_2) %>%
summarize(death_3wk_proj = sum(death_ch_proj, na.rm = TRUE) / pop_2019 * 1000000) %>%
unique()
weekly_proj <- my_data %>%
right_join(proj_table, by = c("as_of" = "as_of_lead_3wk" , "code")) %>%
inner_join(code_names) %>%
inner_join(st_pop_2019) %>%
mutate(death_ch_proj = if_else(as_of > max(my_data$as_of, na.rm = TRUE), death_ch_proj, as.double(death_ch)),
wk_ending = case_when(wday(as_of) == wday(max(my_data$as_of, na.rm = TRUE)) ~
as_of,
wday(as_of) < wday(max(my_data$as_of, na.rm = TRUE)) ~
as_of + days(wday(max(my_data$as_of, na.rm = TRUE)) - wday(as_of)),
wday(as_of) > wday(max(my_data$as_of, na.rm = TRUE)) ~
as_of + days(7 + wday(max(my_data$as_of, na.rm = TRUE)) - wday(as_of)))) %>%
group_by(wk_ending) %>%
summarize(tot_death_ch = sum(death_ch),
tot_death_ch_proj = sum(death_ch_proj)) %>%
data.table()
temp_tbl <- proj_table %>%
mutate(wk_ending = case_when(wday(as_of_lead_3wk) == wday(max(my_data$as_of, na.rm = TRUE)) ~
as_of_lead_3wk,
wday(as_of_lead_3wk) < wday(max(my_data$as_of, na.rm = TRUE)) ~
as_of_lead_3wk + days(wday(max(my_data$as_of, na.rm = TRUE)) - wday(as_of_lead_3wk)),
wday(as_of_lead_3wk) > wday(max(my_data$as_of, na.rm = TRUE)) ~
as_of_lead_3wk + days(7 + wday(max(my_data$as_of, na.rm = TRUE)) - wday(as_of_lead_3wk)))
# ,is_ca = (code == "CA")
) %>%
group_by(wk_ending
# , is_ca
) %>%
summarize(death_ch_us = sum(death_ch_lead_3wk, na.rm = TRUE),
death_ch_proj_us = sum(death_ch_proj, na.rm = TRUE)) %>%
# mutate(death_ch_us = if_else(is_ca, death_ch_us * 7,
#                              as.double(death_ch_us)),
#        death_ch_proj_us = if_else(is_ca, death_ch_proj_us * 7,
#                                   death_ch_proj_us)) %>%
data.table()
ggplot() +
theme_bw() +
geom_col(mapping = aes(x = temp_tbl[, wk_ending], y = temp_tbl[,death_ch_us]), size = 1, na.rm = TRUE, color = "dodgerblue") +
geom_col(mapping = aes(x = temp_tbl[wk_ending > max(my_data$as_of, na.rm = TRUE), wk_ending], y = temp_tbl[wk_ending > max(my_data$as_of, na.rm = TRUE), death_ch_proj_us]), na.rm = TRUE, size = 1, fill = "white", color = "darkgray", linetype = "dashed") +
# geom_col(mapping = aes(x = temp_tbl[is_ca == FALSE, wk_ending], y = temp_tbl[is_ca == FALSE, death_ch_us]), size = 1, na.rm = TRUE, color = "dodgerblue") +
# geom_col(mapping = aes(x = temp_tbl[is_ca == FALSE & wk_ending > max(my_data$as_of, na.rm = TRUE), wk_ending], y = temp_tbl[is_ca == FALSE & wk_ending > max(my_data$as_of, na.rm = TRUE), death_ch_proj_us]), na.rm = TRUE, size = 1, fill = "white", color = "darkgray", linetype = "dashed") +
theme(legend.title = element_blank()) +
labs(x = "Date", y = "Deaths per million per week", title = str_c("The US saw ",
sum(weekly_data$death_weekly, na.rm = TRUE),
" deaths week ending ",
max(my_data$as_of, na.rm = TRUE),
" to a total of ",
sum(lifetime_data[as_of == max(as_of, na.rm = TRUE), deaths]),
"\nand may see ", signif(sum(proj_table[as_of_lead_3wk > max(my_data$as_of, na.rm = TRUE), death_ch_proj / 3], na.rm = TRUE), 3), " per week through ", max(my_data$as_of, na.rm = TRUE) + weeks(3)))
# ,caption = "California data normalized using a factor of 7"
#  + geom_line(mapping = aes(x = temp_tbl[is_ca == TRUE & wk_ending <= max(my_data$as_of, na.rm = TRUE), wk_ending], y = temp_tbl[is_ca == TRUE & wk_ending <= max(my_data$as_of, na.rm = TRUE), death_ch_us]), size = 1, na.rm = TRUE, color = "orange") +
# geom_line(mapping = aes(x = temp_tbl[is_ca == TRUE & wk_ending > max(my_data$as_of, na.rm = TRUE), wk_ending], y = temp_tbl[is_ca == TRUE & wk_ending > max(my_data$as_of, na.rm = TRUE), death_ch_proj_us]), size = 1, na.rm = TRUE, color = "darkorange", linetype = "dashed")
tot_data <- my_data %>%
filter(as_of == max(as_of, na.rm = TRUE)) %>%
inner_join(code_names) %>%
inner_join(pop_dens) %>%
mutate(death_pm = death / Pop * 1E6) %>%
data.table()
tot_data %>%
filter(death_pm > quantile(tot_data[,death_pm], probs = .7, na.rm = TRUE) | code %in% c("CA", "FL")) %>%
ggplot() +
geom_col(mapping = aes(x = reorder(code, X = desc(death_pm)), y = death_pm, fill = Density), color = "dodgerblue") +
labs(x = "state", y = "Weekly deaths per million residents", title = stringr::str_c("States with most cumulative deaths per million"), subtitle = str_c("As of ", max(tot_data[,as_of]), sep = " ")) +
scale_fill_gradient2(low = "white", mid = "white", high = "dodgerblue")
# + theme(legend.title=element_blank(), axis.text.x = element_text(angle = 90, size = 8))
all_data %>%
filter(date == max(date, na.rm = TRUE)) %>%
select(code = state, death) %>%
inner_join(code_names) %>%
inner_join(st_pop_2019) %>%
inner_join(pop_dens) %>%
inner_join(proj_sum) %>%
mutate(death_pm = death / pop_2019 * 1000000,
death_3wk_proj_tot_pm = death_3wk_proj + death_pm) %>%
arrange(desc(death_3wk_proj_tot_pm)) %>%
slice_max(order_by = death_pm, n = 15) %>%
select(code, death, Density, death_3wk_proj, death_pm, death_3wk_proj_tot_pm) %>%
gather(key = "time_code", value = "death_pm", 4:5) %>%
ggplot(mapping = aes(x = reorder(code, desc(death_pm)), y = death_pm, fill = Density)) +
geom_col(mapping = aes(color = time_code, alpha = time_code, linetype = (time_code == "death_3wk_proj")), size = 1) +
scale_fill_gradient2(low = "white", mid = "white", high = "dodgerblue") +
labs(x = "State", y = "Cumulative COVID-19 deaths per million residents", fill = "population\ndensity", title = "States with high COVID-19 death rates may be dense or sparse", subtitle = str_c("COVID-19 deaths per million residents as of ", max(my_data$as_of, na.rm = TRUE))) +
theme_bw() +
theme(legend.position = "none") +
scale_colour_discrete(type = c("lightgray", "dodgerblue"))
weekly_data %>%
filter(death_weekly_pm > quantile(weekly_data$death_weekly_pm, probs = 0.7, na.rm = TRUE) |
# death_weekly_pm < quantile(weekly_data$death_weekly_pm, probs = 0.2, na.rm = TRUE) |
code == "CA") %>%
ggplot(mapping = aes(x = reorder(x = code, X = desc(death_weekly_pm)), y = death_weekly_pm, fill = reg_2)) +
geom_col() +
theme_bw() +
theme(legend.title = element_blank()) +
labs(x = "Date", y = "Deaths per million per week", title = "AZ and WV are atop death rank", subtitle = str_c("Week ending ", max(weekly_data$wk_ending))) +
scale_fill_brewer(palette="Dark2")
weekly_data %>%
filter(case_weekly_pm > quantile(weekly_data$case_weekly_pm, probs = 0.7, na.rm = TRUE) |
# case_weekly_pm < quantile(weekly_data$case_weekly_pm, probs = 0.2, na.rm = TRUE) |
code == "CA") %>%
ggplot(mapping = aes(x = reorder(x = code, X = desc(case_weekly_pm)), y = case_weekly_pm, fill = pos_rate)) +
geom_col(color = "darkgray", size = 1) +
theme_bw() +
labs(x = NULL, y = "cases per million per week", title = "Arizona led the nation in cases per capita for the first time", subtitle = str_c("It had ", weekly_data[code == "AZ", case_weekly]," COVID-19 cases in the week ending ", max(weekly_data$wk_ending)), fill = "Pos. rate") +
scale_fill_gradient2(low = "white", mid = "white", high = "dodgerblue")
proj_sum %>%
filter(death_3wk_proj > quantile(proj_sum$death_3wk_proj, 0.7) |
# death_3wk_proj < quantile(proj_sum$death_3wk_proj, 0.2) |
code %in% c("CA", "FL")) %>%
ggplot(mapping = aes(x = reorder(code, desc(death_3wk_proj)), y = death_3wk_proj, color = reg_2, fill = reg_2)) +
geom_col(alpha = 0.2, linetype = "dashed", size = 1) +
theme_bw() +
theme(legend.title = element_blank()) +
labs(title = "Northeast states may see an increase in deaths soon", subtitle = str_c("Projected deaths for three weeks starting ", max(my_data$as_of, na.rm = TRUE) + days(1)), x = NULL, y = "Projected deaths per million the next 3 weeks") +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2")
print(str_c("Calculated: ", Sys.time(), " using ", Sys.Date() - ymd(max(all_data[,date])), "-day-old state public health data from ", ymd(max(all_data[,date]))))
.libPaths()
library(lubridate)
library(tidyverse)
library(utils)
library(data.table)
library(ggrepel)
library(RColorBrewer)
ecdc_data <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv", na.strings = "", fileEncoding = "UTF-8-BOM", stringsAsFactors = FALSE) %>% data.table()
pop_data <- read_csv("pop_data.csv", col_types = "cci") %>% data.table()
my_ecdc <- ecdc_data %>%
mutate(as_of = dmy(dateRep),
co_code = as.character(countryterritoryCode)) %>%
inner_join(pop_data) %>%
mutate(cases_weekly_pm = cases_weekly * 1000000 / pop_2019,
deaths_weekly_pm = deaths_weekly * 1000000 / pop_2019) %>%
select(co_code,
co_name,
as_of,
cases_weekly,
cases_weekly_pm,
deaths_weekly,
deaths_weekly_pm,
pop_2019)
oecd_list <- c("AUSTRALIA", "AUSTRIA", "BELGIUM", "CANADA", "CHILE",
"CZECH REPUBLIC", "CZECHIA", "DENMARK", "ESTONIA", "FINLAND", "FRANCE",
"GERMANY", "GREECE", "HUNGARY", "ICELAND", "IRELAND", "ISRAEL", "ITALY",
"JAPAN",
"KOREA",
"SOUTH KOREA",
"SOUTH_KOREA",
"LATVIA",
"LITHUANIA",
"LUXEMBOURG",
"MEXICO",
"NETHERLANDS",
"NEW ZEALAND",
"NORWAY",
"POLAND",
"PORTUGAL",
"SLOVAK REPUBLIC",
"SLOVAKIA",
"SLOVENIA",
"SPAIN",
"SWEDEN",
"SWITZERLAND",
"TURKEY",
"UNITED KINGDOM",
"UNITED_KINGDOM",
"UNITED STATES",
"UNITED STATES OF AMERICA",
"UNITED_STATES",
"UNITED_STATES_OF_AMERICA")
my_oecd <- my_ecdc %>%
filter(toupper(co_name) %in% oecd_list)
just_nordics <- my_oecd %>%
filter(co_code %in% c("SWE", "FIN", "ISL", "NOR", "DNK")) %>%
group_by(co_code) %>%
arrange(as_of) %>%
mutate(tot_deaths = cumsum(deaths_weekly),
tot_deaths_pm = cumsum(deaths_weekly_pm),
tot_cases = cumsum(cases_weekly),
tot_cases_pm = cumsum(cases_weekly_pm)) %>%
ungroup() %>%
data.table()
just_nordics %>%
filter(tot_deaths>0) %>%
mutate(x_lbl = if_else(as_of == max(as_of), max(as_of), NULL),
y_lbl = if_else(as_of == max(as_of), tot_deaths_pm, NULL),
cfr = tot_deaths / tot_cases) %>%
ggplot(mapping = aes(x = as_of, y = tot_deaths_pm)) +
geom_point(mapping = aes(color = co_code, size = cfr)) +
geom_label_repel(mapping = aes(x = x_lbl, y = y_lbl, color = co_code, label = co_code), na.rm = TRUE) +
theme(legend.position = "none") +
labs(title = "Sweden has four to eight times as many per capita COVID-19 deaths as other Nordic countries", y = "Cumulative COVID-19 deaths per million", x = "Date")
just_nordics %>%
filter(tot_cases>0) %>%
mutate(x_lbl = if_else(as_of == max(as_of), max(as_of), NULL),
y_lbl = if_else(as_of == max(as_of), tot_cases_pm, NULL)) %>%
ggplot(mapping = aes(x = as_of, y = tot_cases_pm)) +
geom_point(mapping = aes(color = co_code, size = tot_cases_pm)) +
geom_label_repel(mapping = aes(x = x_lbl, y = y_lbl, color = co_code, label = co_code), na.rm = TRUE) +
theme(legend.position = "none") +
labs(title = "Sweden has 30 to 500% more cases per capita than other Nordic countries")
weekly_oecd <- my_oecd %>%
mutate(as_of_week = lubridate::week(as_of)) %>%
group_by(co_code, as_of_week) %>%
summarize(weekly_deaths_pm = sum(deaths_weekly_pm),
weekly_deaths = sum(deaths_weekly),
weekly_cases_pm = sum(cases_weekly_pm),
weekly_cases = sum(cases_weekly),
mean_cases_pm = mean(deaths_weekly_pm, na.rm = TRUE),
mean_deaths_pm = mean(deaths_weekly_pm, na.rm = TRUE),
wk_ending = max(as_of))
weekly_oecd %>%
filter(1 >= abs(lubridate::week(max(wk_ending)) - as_of_week)) %>%
group_by(co_code) %>%
summarize(death_ch_pm = sum(weekly_deaths_pm)) %>%
filter(death_ch_pm > median(death_ch_pm)) %>%
ggplot() +
geom_col(mapping = aes(x = reorder(co_code, desc(death_ch_pm)), y = death_ch_pm)) +
labs(x = "Country code", y = "Deaths the past 2 weeks per 1 mil. pop.", subtitle = str_c("as of", max(weekly_oecd$wk_ending), sep = " "), title = "Deaths over the last two weeks adjusted for population")
weekly_oecd %>%
filter(1 >= abs(lubridate::week(max(wk_ending)) - as_of_week)) %>%
group_by(co_code) %>%
summarize(cases_ch_pm = sum(weekly_cases_pm)) %>%
filter(cases_ch_pm > median(cases_ch_pm)) %>%
ggplot() +
geom_col(mapping = aes(x = reorder(co_code, desc(cases_ch_pm)), y = cases_ch_pm)) +
labs(x = "Country code", y = "Cases the past 2 weeks per 1 mil. pop.", subtitle = str_c("as of", max(weekly_oecd$wk_ending), sep = " "), title = "Cases over the last two weeks adjusted for population")
my_oecd %>%
filter(co_code %in% c("KOR", "USA", "CAN"),
cases_weekly_pm > 0) %>%
ggplot(mapping = aes(x = as_of, y = cases_weekly_pm, color = co_code)) +
geom_smooth(size = 2, alpha = 0) +
labs(color = NULL,
x = "Date",
y = "New cases per mil.")
total_oecd <- my_oecd %>%
group_by(co_code) %>%
summarize(total_deaths_pm = sum(deaths_weekly_pm),
total_deaths = sum(deaths_weekly),
total_cases_pm = sum(cases_weekly_pm),
total_cases = sum(cases_weekly),
end_date = max(as_of))
total_oecd %>%
filter(total_deaths_pm > median(total_oecd$total_deaths_pm)) %>%
mutate(cfr = total_deaths / total_cases) %>%
arrange(desc(total_deaths_pm)) %>%
ggplot() +
geom_col(mapping = aes(x = reorder(co_code, desc(total_deaths_pm)), y = total_deaths_pm, fill = cfr)) +
labs(x = "Country code", y = "Deaths per 1 mil population")
total_oecd %>%
mutate(cfr = signif(total_deaths / total_cases, 2)) %>%
ggplot() +
geom_label_repel(mapping = aes(x = total_cases_pm, y = total_deaths_pm, label = str_c(co_code, cfr, sep = " "), color = cfr)) +
labs(x = "Cases per 1 mil population", y = "Deaths per 1 mil population") +
scale_color_gradientn(colors = c("darkgray", "red"))
labelly <- my_oecd %>%
group_by(co_code) %>%
summarize(as_of = max(as_of), label_death = max(deaths_weekly_pm))
my_kor <- my_oecd %>%
filter(co_code == "KOR") %>%
select(as_of, cases_weekly, deaths_weekly)
j <- data.table(d_offset = integer(), cor_offset = double())
for (i in 1:9) {
j <- rbind(j, data.table(d_offset = i, cor_offset = my_kor %>%
mutate(d_lag = as_of + weeks(i)) %>%
left_join(my_kor, by = c("d_lag" = "as_of")) %>%
pull(6) %>%
cor(x = ., y = my_kor$cases_weekly, use = "complete.obs")))
}
j
my_kor %>%
mutate(d_as_of = as_of - weeks(1)) %>%
select(deaths_weekly, d_as_of) %>%
full_join((my_kor %>% select(cases_weekly, as_of)), by = c("d_as_of" = "as_of")) %>%
mutate(week_num = week(d_as_of)) %>%
group_by(week_num) %>%
summarize(death_wk = sum(deaths_weekly, na.rm = TRUE),
case_wk = sum(cases_weekly, na.rm = TRUE),
week_of = median(d_as_of, na.rm = TRUE)) %>%
mutate(deaths_ix = death_wk / max(death_wk, na.rm = TRUE),
cases_ix = case_wk / max(case_wk, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = week_of)) +
geom_line(mapping = aes(y = deaths_ix), color = "green") +
geom_line(mapping = aes(y = cases_ix), color = "orange")
raw_labor <- read_csv("nordic_unemp.csv")
nord_labor <- raw_labor %>%
gather(code, "unemp", "dnk", "fin", "isl", "nor", "swe") %>%
mutate(code = toupper(code))
nord_labor %>%
mutate(co_code = code) %>%
group_by(co_code) %>%
filter(!is.na(unemp)) %>%
filter(ymd(DATE) %in% c(max(ymd(DATE), na.rm = TRUE), ymd("2020-01-01"))) %>%
summarize(as_of = max(DATE, na.rm = TRUE), unemp = max(unemp, na.rm = TRUE) - min(unemp, na.rm = TRUE)) %>%
left_join(my_oecd) %>%
ggplot() +
geom_label(mapping = aes(x = deaths_weekly_pm, y = unemp, color = co_code, label = str_c(co_code))) +
labs(x = "COVID-19 cases per million", y = str_c("change in unemployment rate from Jan 2020")) +
theme(legend.position = "none")
