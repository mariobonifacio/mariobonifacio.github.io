filter(as_of > Sys.Date() - months(1)
# ,reg_2 %in% c("Northeast", "South", "Southwest")
) %>%
# wday(as_of) == wday(max(as_of)),
ungroup() %>%
group_by(code, as_of) %>%
summarize(case_sum = sum(case_ch) / sum(pop_2019) * 1000000, reg_2 = min(reg_2)) %>%
mutate(reg_2 = factor(reg_2, levels = c("Middle South", "Midwest", "Northeast", "Plain and Mountain", "South", "Southwest", "West Coast"))) %>%
ggplot() +
geom_smooth(mapping = aes(x = as_of, y = case_sum, color = reg_2), alpha = .1) +
labs(x = "state", y = "New cases per million", title = "Do the appearance of new cases align with protests?", subtitle = str_c("Data from the month ending ", case_growth$wk_ending[1], " could offer clues", sep = " "))
# +
#  facet_wrap(facets = vars(reorder(code, reg_2)), nrow = 5) +
#  theme(axis.text = element_blank(),
#        axis.ticks = element_blank(),
#        axis.title.x  = element_blank(),
#        strip.background = element_rect(fill = "lightgray"),
#        legend.title = element_blank())
case_growth %>%
inner_join(code_names) %>%
arrange(desc(cases_weekly_growth)) %>%
filter(cases_weekly_growth > quantile(case_growth$cases_weekly_growth, probs = 0.7, na.rm = TRUE)) %>%
ggplot() +
geom_col(mapping = aes(x = reorder(code, X = desc(cases_weekly_growth)), y = cases_weekly_growth, fill = reg_2)) +
labs(x = "state", y = "weekly case growth rate", title = stringr::str_c("Highest case growth rate by state, week ending", case_growth$wk_ending[1], sep = " ")) +
theme(legend.title=element_blank())
death_growth %>%
inner_join(code_names) %>%
ggplot(mapping = aes(x = death_weekly_growth, y = death_weekly_per_mil, color = reg_2)) +
## geom_point() +
ggrepel::geom_text_repel(mapping = aes(label = code)) +
labs(x = "Weekly death growth rate", y = "Weekly deaths per million", title = "Deaths over the past week per million and growth in deaths",
subtitle = str_c("States face hard times"), case_growth$wk_ending[1]) +
theme(legend.title=element_blank())
case_growth %>%
inner_join(code_names) %>%
ggplot(mapping = aes(x = cases_weekly_growth, y = cases_weekly_per_mil, color = reg_2)) +
## geom_point() +
ggrepel::geom_text_repel(mapping = aes(label = code)) +
labs(x = "Weekly case growth rate", y = "Weekly new cases per million", title = "Cases over the past week per million and growth in cases",
subtitle = "Shows states having a hard time now and those who may face hard times soon") +
theme(legend.title=element_blank())
my_data %>%
filter(as_of >= ymd(20200616)) %>%
group_by(as_of) %>%
summarize(us_cases = sum(cases, na.rm = TRUE),
us_cases_ch = sum(case_ch, na.rm = TRUE),
us_deaths = sum(death, na.rm = TRUE),
us_deaths_ch = sum(death_ch, na.rm = TRUE)) %>%
mutate(since = min(as_of),
casesch_pre = if_else(as_of <= ymd(20200716), us_cases_ch, NULL),
casesch_post = if_else(as_of >= ymd(20200716), us_cases_ch, NULL)) %>%
ggplot(mapping = aes(x = as_of)) +
geom_smooth(mapping = aes(y = casesch_pre, color = weekdays(as_of)), na.rm = TRUE, method = 'lm', linetype = 'dotted', alpha = 0) +
geom_smooth(mapping = aes(y = casesch_post, color = weekdays(as_of)), na.rm = TRUE, method = 'lm', linetype = 'dotted', alpha = 0) +
geom_smooth(mapping = aes(y = casesch_pre), na.rm = TRUE, method = 'lm', linetype = 'dotted', alpha = 0.5) +
geom_smooth(mapping = aes(y = casesch_post), na.rm = TRUE, method = 'lm', linetype = 'dotted', alpha = 0.5) +
geom_point(mapping = aes(y = us_cases_ch), na.rm = TRUE) +
geom_vline(xintercept = ymd(20200716), linetype = 'dashed') +
theme(legend.position = "none") +
labs(title = "Did case growth change when HHS took over reporting from CDC on 16 July?", subtitle = "New U.S. cases per day since 1 July using state data", x = NULL, y = "COVID-19 daily cases") +
ylim(0, 80000)
pk <- c("AZ")
my_data %>%
filter(code %in% pk) %>%
mutate(death_ch = if_else(as_of == ymd("2020-04-30") & code == "TX", 50, as.double(death_ch))) %>%
group_by(as_of) %>%
summarize(us_cases = sum(cases, na.rm = TRUE),
us_cases_ch = sum(case_ch, na.rm = TRUE),
us_deaths = sum(death, na.rm = TRUE),
us_deaths_ch = sum(death_ch, na.rm = TRUE)) %>%
filter(us_deaths > 9) %>%
mutate(since = min(as_of),
is_day = if_else(weekdays(as_of) == weekdays(my_data[[1,1]]), 0.3, 0.1)) %>%
ggplot(mapping = aes(x = as_of, y = us_deaths_ch)) +
geom_smooth(linetype = 0, mapping = aes(fill = weekdays(as_of), alpha = is_day)) +
geom_smooth(size = 1, alpha = 0, linetype = 2, color = "black") +
geom_vline(xintercept = ymd(20200526) + days(5)) +
theme(legend.position = "none") +
labs(title = str_c("Are", pk, "deaths plateauing or even dropping?", sep = " "), subtitle = str_c("Deaths per day since", min(my_data[code %in% pk, as_of]), sep = " "), x = NULL, y = "COVID-19 daily deaths") +
scale_alpha(range = c(.1, .3))
pk <- c("OK")
my_data %>%
filter(code %in% pk) %>%
mutate(case_ch = as.double(case_ch)) %>%
group_by(as_of) %>%
summarize(us_cases = sum(cases, na.rm = TRUE),
us_cases_ch = sum(case_ch, na.rm = TRUE),
us_deaths = sum(death, na.rm = TRUE),
us_deaths_ch = sum(death_ch, na.rm = TRUE)) %>%
filter(us_deaths > 9) %>%
mutate(since = min(as_of),
is_day = if_else(weekdays(as_of) == weekdays(my_data[[1,1]]), 0.3, 0.1)) %>%
ggplot(mapping = aes(x = as_of, y = us_cases_ch)) +
geom_smooth(linetype = 1, mapping = aes(fill = weekdays(as_of), color = weekdays(as_of))) +
# geom_smooth(size = 1, alpha = 0, linetype = 1, color = "black", span = .5) +
geom_vline(xintercept = ymd(20200621), color = "dodgerblue", linetype = 2) +
theme(legend.title = element_blank()) +
labs(title = str_c("It appears as though", pk, "cases are plateauing", sep = " "), subtitle = str_c("Cases per day since", min(my_data[death_ch > 9 & code == 'OK', as_of]), sep = " "), x = NULL, y = "New COVID-19 cases by day", caption = "The vertical, dashed blue line marks the President's 21 June rally in Tulsa") +
scale_alpha(range = c(.1, .3))
pk <- c("")
my_data %>%
# filter(code %in% pk) %>%
group_by(as_of, code) %>%
summarize(us_cases = sum(cases, na.rm = TRUE),
us_cases_ch = sum(case_ch, na.rm = TRUE),
us_deaths = sum(death, na.rm = TRUE),
us_deaths_ch = sum(death_ch, na.rm = TRUE)) %>%
inner_join(code_names) %>%
inner_join(st_pop_2019) %>%
filter(as_of > ymd(20200331)) %>%
# filter(reg_2 %in% c("South", "Midwest", "Northeast", "Southwest")) %>%
ggplot(mapping = aes(x = as_of, y = us_cases_ch/pop_2019 * 1000000)) +
# geom_smooth(linetype = 0, mapping = aes(fill = weekdays(as_of)), alpha = 0.1) +
geom_smooth(size = 1, linetype = 1, mapping = aes(color = reg_2, fill = reg_2), span = .5, alpha = .1) +
geom_vline(xintercept = ymd("2020-05-22") + days(5), color = "red", linetype = 2) +
geom_vline(xintercept = ymd("2020-05-29") + days(5), color = "blue", linetype = 2) +
theme(legend.title = element_blank()) +
labs(title = "After mid-May, cases fell in the North from Minnesota to Maine\nand rose sharply in sun belt states from Arizona to Florida", x = NULL, y = "New COVID-19 cases per million residents", caption = "Vertical red and blue lines mark five days after the start of\nMemorial Day weekend and national protests, respectively", subtitle = str_c("Data as of ", max(my_data$as_of)))
pk <- c("NY")
my_data %>%
filter(code != pk) %>%
group_by(as_of) %>%
summarize(us_cases = sum(cases, na.rm = TRUE),
us_cases_ch = sum(case_ch, na.rm = TRUE),
us_deaths = sum(death, na.rm = TRUE),
us_deaths_ch = sum(death_ch, na.rm = TRUE)) %>%
filter(us_cases > 99) %>%
mutate(since = min(as_of)) %>%
ggplot(mapping = aes(x = as_of, y = us_deaths_ch)) +
geom_smooth(linetype = "dashed", color = "black") +
geom_smooth(linetype = 0, mapping = aes(fill = weekdays(as_of)), alpha = 0.1) +
labs(title = str_c("Are non-", pk, " deaths plateauing or even dropping?", sep = ""), subtitle = "U.S. deaths since the 100th case", x = "date", y = "COVID-19 deaths")
pk <- c("NY", "NJ", "MA", "CT", "RI", "NH", "VT", "ME", "CA", "OR", "WA")
my_data %>%
inner_join(code_names) %>%
inner_join(st_pop_2019) %>%
mutate(noreast = if_else(code %in% (pk), "Northeastern states", "All other states")) %>%
group_by(noreast, as_of) %>%
summarize(us_cases = sum(cases, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE),
us_cases_ch = sum(case_ch, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE),
us_deaths = sum(death, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE),
us_deaths_ch = sum(death_ch, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE)) %>%
filter(us_cases > .000009) %>%
mutate(since = min(as_of)) %>%
ggplot(mapping = aes(x = as_of, y = us_cases_ch, color = noreast)) +
geom_smooth(linetype = 0, alpha = .1, mapping = aes(fill = weekdays(as_of)), span = .05) +
geom_smooth(alpha = 0, size = 1, linetype = 2) +
theme(legend.position = "none") +
labs(title = str_c(str_c(pk, collapse = ", "), " have switched w/others", sep = ""), subtitle = "Cases since one in 100,000 had been confirmed", x = "date", y = "COVID-19 new cases")
my_data %>%
inner_join(code_names) %>%
inner_join(st_pop_2019) %>%
mutate(noreast = if_else(code %in% (pk), "Northeastern states", "All other states")) %>%
group_by(noreast, as_of) %>%
summarize(us_cases = sum(cases, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE),
us_cases_ch = sum(case_ch, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE),
us_deaths = sum(death, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE),
us_deaths_ch = sum(death_ch, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE)) %>%
filter(us_cases > .000009) %>%
mutate(since = min(as_of)) %>%
ggplot(mapping = aes(x = as_of, y = us_deaths_ch)) +
geom_smooth(linetype = 0, alpha = .05, mapping = aes(fill = weekdays(as_of), color = noreast)) +
geom_smooth(alpha = 0, size = 1, linetype = 2, mapping = aes(color = noreast)) +
geom_smooth(color = "black") +
theme(legend.position = "none") +
labs(title = str_c(str_c(pk, collapse = ", "), " have switched w/others", sep = ""), subtitle = "Deaths per million since 10 cases per million", x = "date", y = "COVID-19 deaths")
top_n(death_growth, n = 20) %>%
inner_join(top_n(case_growth, n = 20)) %>%
inner_join(code_names) %>%
filter((death_weekly_per_mil > as.numeric(reorder(death_growth$death_weekly_per_mil, desc(death_growth$death_weekly_per_mil))[[11]])) |
(cases_weekly_per_mil > as.numeric(reorder(case_growth$cases_weekly_per_mil, desc(case_growth$cases_weekly_per_mil))[[11]]))) %>%
ggplot(mapping = aes(x = death_weekly_per_mil, y = cases_weekly_per_mil)) +
geom_smooth(method = "lm", mapping = aes(color = NULL), linetype = "dotted", fill = 0.1, color = "lightgray") +
## geom_point(mapping = aes(color = reg_2), size = 2) +
ggrepel::geom_text_repel(mapping = aes(label = code, color = reg_2)) +
labs(x = "Weekly deaths per million", y = "Weekly new cases per million", title = "States dealing with a lot right now", subtitle = str_c("As of ", death_growth[[1, "wk_ending"]])) +
theme(legend.title=element_blank())
death_growth %>%
inner_join(case_growth) %>%
inner_join(code_names) %>%
filter((death_weekly_growth > 0.05) |
(cases_weekly_growth > 0.05)) %>%
ggplot(mapping = aes(x = death_weekly_growth, y = cases_weekly_growth, color = reg_2)) +
ggrepel::geom_text_repel(mapping = aes(label = code)) +
labs(x = "Weekly growth in deaths", y = "Weekly growth in cases", title = "States where the growth of deaths or new cases are rising", subtitle = str_c("As of ", death_growth[[1, "wk_ending"]])) +
theme(legend.title=element_blank())
death_growth %>%
inner_join(case_growth) %>%
inner_join(code_names) %>%
filter((death_weekly_growth <= 0.025) |
(cases_weekly_growth <= 0.025)) %>%
ggplot(mapping = aes(x = death_weekly_growth, y = cases_weekly_growth, color = reg_2)) +
ggrepel::geom_label_repel(mapping = aes(label = code)) +
labs(x = "Weekly growth in deaths", y = "Weekly growth in cases", title = "States where new deaths or cases are flat or falling", subtitle = str_c("Two weeks ending ", death_growth[[1, "wk_ending"]])) +
theme(legend.title=element_blank())
top_n(death_growth, n = 20) %>%
inner_join(top_n(case_growth, n = 20)) %>%
inner_join(code_names) %>%
filter((death_weekly_per_mil > as.numeric(reorder(death_growth$death_weekly_per_mil, desc(death_growth$death_weekly_per_mil))[[11]])) |
(cases_weekly_per_mil > as.numeric(reorder(case_growth$cases_weekly_per_mil, desc(case_growth$cases_weekly_per_mil))[[11]]))) %>%
ggplot(mapping = aes(x = death_weekly_per_mil, y = cases_weekly_per_mil)) +
geom_smooth(method = "lm", mapping = aes(color = NULL), linetype = "dotted", fill = 0.1, color = "lightgray") +
## geom_point(mapping = aes(color = reg_2), size = 2) +
ggrepel::geom_text_repel(mapping = aes(label = code, color = reg_2)) +
labs(x = "Weekly deaths per million", y = "Weekly new cases per million", title = "States dealing with a lot right now") +
theme(legend.title=element_blank())
my_data %>%
filter(as_of == max(as_of)) %>%
inner_join(code_names) %>%
inner_join(st_pop_2019) %>%
mutate(cases_pm = cases / pop_2019 * 1E6,
deaths_pm = death / pop_2019 * 1E6) %>%
arrange(desc(deaths_pm)) %>%
top_n(10) %>%
mutate(y_label = deaths_pm, x_label = as_of) %>%
select(code, y_label, x_label) %>%
inner_join(my_data) %>%
arrange(code, as_of) %>%
inner_join(code_names) %>%
inner_join(st_pop_2019) %>%
mutate(cases_pm = cases / pop_2019 * 1E6,
deaths_pm = death / pop_2019 * 1E6,
x_label = if_else(as_of == max(as_of), x_label, NULL)) %>%
ggplot() +
geom_line(mapping = aes(x = as_of, y = deaths_pm, color = code)) +
geom_label_repel(mapping = aes(x = x_label, y = y_label, label = code, color = code)) +
theme(legend.position = "none")
since_100 <- my_data %>%
arrange(code, as_of) %>%
inner_join(code_names) %>%
inner_join(st_pop_2019) %>%
mutate(cases_pm = cases / pop_2019 * 1E6,
deaths_pm = death / pop_2019 * 1E6) %>%
filter(cases_pm >= 100) %>%
group_by(code) %>%
mutate(days_in = as.integer(as_of - min(as_of))) %>%
ungroup()
since_100_labels <- since_100 %>%
group_by(code) %>%
summarize(lab_days = max(days_in), lab_deaths = max(deaths_pm))
test_code <- c("MN", "TX", "AZ", "CA", "FL", "OK", "MN", "NY")
since_100 %>%
filter(code %in% test_code) %>%
inner_join(since_100_labels) %>%
group_by(code) %>%
mutate(lab_days = if_else(lab_days == days_in, lab_days, NULL),
lab_deaths = if_else(lab_deaths == deaths_pm, lab_deaths, NULL)) %>%
ggplot(mapping = aes(color = code, x = days_in, y = deaths_pm)) +
geom_line() +
geom_label_repel(aes(x = lab_days, y = lab_deaths, label = code), na.rm = TRUE) +
labs(x = "Days since a state identified COVID-19 in 0.01% of its residents",
y = "Cumulative deaths per million residents",
title = "Allows for comparison between states on different timelines") +
theme(legend.title=element_blank())
since_100 %>%
filter(as_of == max(as_of),
deaths_pm > 500 | deaths_pm < 100) %>%
arrange(desc(deaths_pm)) %>%
ggplot() +
geom_col(mapping = aes(x = reorder(code, X = desc(deaths_pm)), y = deaths_pm, fill = reg_2, alpha = death_ch)) +
labs(x = "state", y = "Weekly deaths per million residents", title = stringr::str_c("States with most & fewest deaths per million"), subtitle = str_c("2 weeks ending", case_growth$wk_ending[1], sep = " ")) +
theme(legend.title=element_blank())
since_100_labels <- since_100 %>%
group_by(code) %>%
summarize(lab_days = max(days_in), lab_cases = max(cases_pm))
test_code <- c("MN", "TX", "AZ", "CA", "FL", "OK", "MN", "NY")
since_100 %>%
filter(code %in% test_code) %>%
inner_join(since_100_labels) %>%
group_by(code) %>%
mutate(lab_days = if_else(lab_days == days_in, lab_days, NULL),
lab_cases = if_else(lab_cases == cases_pm, lab_cases, NULL)) %>%
ggplot(mapping = aes(color = code, x = days_in, y = cases_pm)) +
geom_line() +
geom_label_repel(aes(x = lab_days, y = lab_cases, label = code), na.rm = TRUE) +
labs(x = "Days since a state identified COVID-19 in 0.01% of its residents",
y = "Cumulative cases per million residents",
title = "Allows for comparison between states on different timelines") +
theme(legend.title=element_blank())
since_100 %>%
inner_join(since_100_labels) %>%
mutate(cfr = death / cases,
tests_pm = tests / pop_2019 * 1E6) %>%
filter(days_in == 21) %>%
ggplot(mapping = aes(x = tests_pm, y = cfr, label = code)) +
geom_smooth(method = "lm") +
geom_text_repel(mapping = aes(color = reg_2)) +
labs(x = "Coronavirus tests per million residents", y = "Case fatality ratio", title = "Testing more is associated with a lower case fatality rate") +
theme(legend.title=element_blank())
my_data %>%
inner_join(code_names) %>%
inner_join(st_pop_2019) %>%
inner_join(results_2016) %>%
filter(between(as_of, ymd(20200724), ymd(20200807))) %>%
group_by(code) %>%
mutate(new_cases = (max(cases, na.rm = TRUE) - min(cases, na.rm = TRUE)) / pop_2019 * 1000000,
is_clinton = (median(t_mgn, na.rm = TRUE) < 0),
case_ch_pm = case_ch / pop_2019 * 1000000) %>%
ungroup() %>%
ggplot() +
geom_smooth(mapping = aes(x = as_of, y = case_ch_pm, color = is_clinton), na.rm = TRUE, span = .5) +
labs(x = "state", y = "New COVID-19 cases per million per day", title = "The Dakotas led the nation in new cases per million after Sturgis", subtitle = "Total new COVID-19 cases per million from 23 to 31 Aug 2020 by state") +
facet_wrap(facets = vars(reorder(code, desc(new_cases))), nrow = 5) +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title.x  = element_blank(),
strip.background = element_rect(fill = "lightgray"),
legend.position = 0)
pk <- c("SD")
my_data %>%
inner_join(code_names) %>%
inner_join(st_pop_2019) %>%
mutate(sub_group = if_else(code %in% (pk), "So. Dakota", "other states")) %>%
group_by(sub_group, as_of) %>%
summarize(us_cases = sum(cases, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE) * 1000000,
us_cases_ch = sum(case_ch, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE) * 1000000,
us_deaths = sum(death, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE * 1000000),
us_deaths_ch = sum(death_ch, na.rm = TRUE) / sum(pop_2019, na.rm = TRUE * 1000000),
pos_rate = sum(case_ch, na.rm = TRUE) / sum(test_ch, na.rm = TRUE)) %>%
filter(between(as_of, ymd(20200315), ymd(20200907))) %>%
mutate(since = min(as_of)) %>%
ggplot(mapping = aes(x = as_of, y = us_cases_ch, color = sub_group)) +
geom_smooth(linetype = 0, mapping = aes(alpha = pos_rate, fill = sub_group), span = .35) +
geom_smooth(alpha = 0, size = 1) +
geom_vline(xintercept = ymd(20200807), linetype = 2) +
# geom_vline(xintercept = ymd(20200715), linetype = 2) +
# theme(legend.position = "none") +
labs(title = str_c(str_c(pk, collapse = ", "), " new cases grew in August", sep = ""), subtitle = "New daily cases per million; Dashed line marks 7 Aug", x = "date", y = "new daily COVID-19 cases per million residents")
.libPaths()
library(lubridate)
library(tidyverse)
library(utils)
library(data.table)
library(ggrepel)
library(RColorBrewer)
ecdc_data <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv", na.strings = "", fileEncoding = "UTF-8-BOM", stringsAsFactors = FALSE)
pop_data <- read_csv("pop_data.csv", col_types = "cci")
my_ecdc <- ecdc_data %>%
mutate(as_of = dmy(dateRep),
co_code = as.character(countryterritoryCode)) %>%
inner_join(pop_data) %>%
mutate(cases_pm = cases * 1000000 / pop_2019,
deaths_pm = deaths * 1000000 / pop_2019) %>%
select(co_code,
co_name,
as_of,
cases,
cases_pm,
deaths,
deaths_pm,
pop_2019)
oecd_list <- c("AUSTRALIA", "AUSTRIA", "BELGIUM", "CANADA", "CHILE",
"CZECH REPUBLIC", "CZECHIA", "DENMARK", "ESTONIA", "FINLAND", "FRANCE",
"GERMANY", "GREECE", "HUNGARY", "ICELAND", "IRELAND", "ISRAEL", "ITALY",
"JAPAN",
"KOREA",
"LATVIA",
"LITHUANIA",
"LUXEMBOURG",
"MEXICO",
"NETHERLANDS",
"NEW ZEALAND",
"NORWAY",
"POLAND",
"PORTUGAL",
"SLOVAK REPUBLIC",
"SLOVAKIA",
"SLOVENIA",
"SPAIN",
"SWEDEN",
"SWITZERLAND",
"TURKEY",
"UNITED KINGDOM",
"UNITED_KINGDOM",
"UNITED STATES",
"UNITED STATES OF AMERICA",
"UNITED_STATES",
"UNITED_STATES_OF_AMERICA")
my_oecd <- my_ecdc %>%
filter(toupper(co_name) %in% oecd_list)
just_nordics <- my_oecd %>%
filter(co_code %in% c("SWE", "FIN", "ISL", "NOR", "DNK")) %>%
group_by(co_code) %>%
arrange(as_of) %>%
mutate(tot_deaths = cumsum(deaths),
tot_deaths_pm = cumsum(deaths_pm),
tot_cases = cumsum(cases),
tot_cases_pm = cumsum(cases_pm)) %>%
ungroup()
just_nordics %>%
filter(tot_deaths>0) %>%
mutate(x_lbl = if_else(as_of == max(as_of), max(as_of), NULL),
y_lbl = if_else(as_of == max(as_of), tot_deaths_pm, NULL),
cfr = deaths / cases) %>%
ggplot(mapping = aes(x = as_of, y = tot_deaths_pm)) +
geom_point(mapping = aes(color = co_code, size = cfr)) +
geom_label_repel(mapping = aes(x = x_lbl, y = y_lbl, color = co_code, label = co_code), na.rm = TRUE) +
theme(legend.position = "none") +
labs(title = "Sweden has five to 10 times more COVID-19 deaths than other Nordic countries", x = "Cumulative COVID-19 deaths per million", y = "Date")
just_nordics %>%
filter(tot_cases>0) %>%
mutate(x_lbl = if_else(as_of == max(as_of), max(as_of), NULL),
y_lbl = if_else(as_of == max(as_of), tot_cases_pm, NULL)) %>%
ggplot(mapping = aes(x = as_of, y = tot_cases_pm)) +
geom_point(mapping = aes(color = co_code, size = cases_pm)) +
geom_label_repel(mapping = aes(x = x_lbl, y = y_lbl, color = co_code, label = co_code), na.rm = TRUE) +
theme(legend.position = "none") +
labs(title = "Sweden has 30 to 500% more cases per capita than other Nordic countries")
weekly_oecd <- my_oecd %>%
mutate(as_of_week = lubridate::week(as_of)) %>%
group_by(co_code, as_of_week) %>%
summarize(weekly_deaths_pm = sum(deaths_pm),
weekly_deaths = sum(deaths),
weekly_cases_pm = sum(cases_pm),
weekly_cases = sum(cases),
mean_cases_pm = mean(deaths_pm, na.rm = TRUE),
mean_deaths_pm = mean(deaths_pm, na.rm = TRUE),
wk_ending = max(as_of))
weekly_oecd %>%
filter(1 >= abs(lubridate::week(max(wk_ending)) - as_of_week)) %>%
group_by(co_code) %>%
summarize(death_ch_pm = sum(weekly_deaths_pm)) %>%
filter(death_ch_pm > median(death_ch_pm)) %>%
ggplot() +
geom_col(mapping = aes(x = reorder(co_code, desc(death_ch_pm)), y = death_ch_pm)) +
labs(x = "Country code", y = "Deaths the past 2 weeks per 1 mil. pop.", subtitle = str_c("as of", max(weekly_oecd$wk_ending), sep = " "), title = "Deaths over the last two weeks adjusted for population")
weekly_oecd %>%
filter(1 >= abs(lubridate::week(max(wk_ending)) - as_of_week)) %>%
group_by(co_code) %>%
summarize(cases_ch_pm = sum(weekly_cases_pm)) %>%
filter(cases_ch_pm > median(cases_ch_pm)) %>%
ggplot() +
geom_col(mapping = aes(x = reorder(co_code, desc(cases_ch_pm)), y = cases_ch_pm)) +
labs(x = "Country code", y = "Cases the past 2 weeks per 1 mil. pop.", subtitle = str_c("as of", max(weekly_oecd$wk_ending), sep = " "), title = "Cases over the last two weeks adjusted for population")
weekly_oecd %>%
filter(co_code %in% c("CAN", "USA", "GBR")) %>%
ggplot(mapping = aes(x = wk_ending, y = mean_deaths_pm, color = co_code)) +
geom_line()
total_oecd <- my_oecd %>%
group_by(co_code) %>%
summarize(total_deaths_pm = sum(deaths_pm),
total_deaths = sum(deaths),
total_cases_pm = sum(cases_pm),
total_cases = sum(cases),
end_date = max(as_of))
total_oecd %>%
filter(total_deaths_pm > median(total_oecd$total_deaths_pm)) %>%
mutate(cfr = total_deaths / total_cases) %>%
arrange(desc(total_deaths_pm)) %>%
ggplot() +
geom_col(mapping = aes(x = reorder(co_code, desc(total_deaths_pm)), y = total_deaths_pm, fill = cfr)) +
labs(x = "Country code", y = "Deaths per 1 mil population")
total_oecd %>%
mutate(cfr = signif(total_deaths / total_cases, 2)) %>%
ggplot() +
geom_label_repel(mapping = aes(x = total_cases_pm, y = total_deaths_pm, label = str_c(co_code, cfr, sep = " "), color = cfr)) +
labs(x = "Cases per 1 mil population", y = "Deaths per 1 mil population") +
scale_color_gradientn(colors = c("darkgray", "red"))
labelly <- my_oecd %>%
group_by(co_code) %>%
summarize(as_of = max(as_of), label_death = max(deaths_pm))
my_oecd %>%
left_join(labelly, by = c("co_code", "as_of")) %>%
ggplot() +
geom_line(mapping = aes(x = as_of, y = deaths_pm, color = co_code)) +
geom_label(aes(x = as_of, y = label_death, label = co_code), na.rm = TRUE) +
theme(legend.position = "none") +
xlim(ymd(20200301), as_date(Sys.time()))
raw_labor <- read_csv("nordic_unemp.csv")
nord_labor <- raw_labor %>%
gather(code, "unemp", "dnk", "fin", "isl", "nor", "swe") %>%
mutate(code = toupper(code))
nord_labor %>%
mutate(co_code = code) %>%
group_by(co_code) %>%
filter(!is.na(unemp)) %>%
filter(ymd(DATE) %in% c(max(ymd(DATE), na.rm = TRUE), ymd("2020-01-01"))) %>%
summarize(as_of = max(DATE, na.rm = TRUE), unemp = max(unemp, na.rm = TRUE) - min(unemp, na.rm = TRUE)) %>%
left_join(my_oecd) %>%
ggplot() +
geom_label(mapping = aes(x = cases_pm, y = unemp, color = co_code, label = str_c(co_code))) +
labs(x = "COVID-19 cases per million", y = str_c("change in unemployment rate from Jan 2020")) +
theme(legend.position = "none")
my_data %>%
inner_join(code_names) %>%
inner_join(st_pop_2019) %>%
inner_join(results_2016) %>%
mutate(is_clinton = t_mgn < 0) %>%
group_by(is_clinton, as_of) %>%
summarize(case_ch_pm = sum(case_ch) / sum(pop_2019) * 1000000,
death_ch_pm = sum(death_ch) / sum(pop_2019) * 1000000,
cases_pm = sum(cases) / sum(pop_2019) * 1000000,
death_pm = sum(death) / sum(pop_2019) * 1000000) %>%
group_by(as_of) %>%
mutate(multy = 2 * is_clinton - 1,
case_ch_pm_diff = if_else(sum(multy * case_ch_pm) < 0, - sum(multy * case_ch_pm) / 2, 0),
death_ch_pm_diff = sum(multy * death_ch_pm),
cases_pm_diff = sum(multy * cases_pm),
death_pm_diff = if_else(sum(multy * death_pm) > 0, sum(multy * death_pm) / 2, 0)) %>%
ungroup() %>%
filter(cases_pm >= 10) %>%
ggplot(mapping = aes(x = as_of)) +
geom_smooth(mapping = aes(x = as_of, y = death_pm, color = is_clinton, fill = is_clinton), alpha = 0.1, na.rm = TRUE, span = .1) +
geom_point(mapping = aes(y = death_pm_diff)) +
labs(x = "Date", y = "COVID-19 deaths per million per day", title = "States Trump won have had higher daily COVID-19 deaths since July", subtitle = "Total COVID-19 deaths per million per day by 2016 result") +
theme(
# axis.text = element_blank(),
#     axis.ticks = element_blank(),
#     axis.title.x  = element_blank(),
# strip.background = element_rect(fill = "lightgray"),
legend.position = 0)
