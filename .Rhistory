ggplot() +
geom_histogram(mapping = aes(pred_delay), bins = 50) +
ggtitle(mdn_pred)
my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday')),
mdn_pred = median(pred_delay, na.rm = T)) %>%
ggplot() +
geom_histogram(mapping = aes(pred_delay), bins = 50) +
labels(mdn_pred)
mdn_pred = pred_delay / median(pred_delay) %>%
my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday')),
mdn_pred = pred_delay / median(pred_delay)) %>%
ggplot() +
geom_histogram(mapping = aes(pred_delay), bins = 50)
input <- tibble(.rows = 1)
input$fly_date <- '2019-07-06'; input$hr <- 21; input$min <- 30
coef <- tibble(mn = c(-0.86897399, 0.13248559, 0.09383102,
0.15231776, 0.31235699, 0.32355042,
0.09799821, 0.26531381, 0.31624765),
se = c(0.0138170775, 0.0008950894, 0.0021244161,
0.0144519522, 0.0158520702, 0.0148300182,
0.0144242610, 0.0147171209, 0.0146681318))
my_norm <- tibble(.rows = 10000)
for(i in 1:9) my_norm[i] = rnorm(n = nrow(my_norm), mean = coef[[i, 1]], sd = coef[[1, 2]])
my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday')),
mdn_pred = pred_delay / median(pred_delay)) %>%
ggplot() +
geom_histogram(mapping = aes(pred_delay), bins = 50)
my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday')),
mdn_pred = pred_delay / median(pred_delay)) %>%
ggplot() +
geom_histogram(mapping = aes(pred_delay, color = mdn_pred), bins = 50)
input <- tibble(.rows = 1)
input$fly_date <- '2019-07-06'; input$hr <- 21; input$min <- 30
coef <- tibble(mn = c(-0.86897399, 0.13248559, 0.09383102,
0.15231776, 0.31235699, 0.32355042,
0.09799821, 0.26531381, 0.31624765),
se = c(0.0138170775, 0.0008950894, 0.0021244161,
0.0144519522, 0.0158520702, 0.0148300182,
0.0144242610, 0.0147171209, 0.0146681318))
my_norm <- tibble(.rows = 10000)
for(i in 1:9) my_norm[i] = rnorm(n = nrow(my_norm), mean = coef[[i, 1]], sd = coef[[1, 2]])
my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday')),
mdn_pred = pred_delay / median(pred_delay)) %>%
ggplot() +
geom_histogram(mapping = aes(pred_delay, color = mdn_pred), bins = 50)
my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday'))) %>%
ggplot() +
geom_histogram(mapping = aes(pred_delay), bins = 50)
my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday'))) %>%
ggplot() +
geom_histogram(mapping = aes(pred_delay, color = 'meow'), bins = 50)
my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday'))) %>%
ggplot() +
geom_histogram(mapping = aes(pred_delay, fill = 'meow'), bins = 50)
my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday'))) %>%
ggplot() +
geom_histogram(mapping = aes(pred_delay, fill = 'meow'), bins = 50) +
geom_vline(xintercept = median(pred_delay))
my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday'))) %>%
ggplot() +
geom_histogram(mapping = aes(pred_delay, fill = V2), bins = 50) +
geom_vline(xintercept = median(pred_delay))
my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday'))) %>%
ggplot() +
geom_histogram(mapping = aes(pred_delay, fill = V2), bins = 50) +
geom_vline(xintercept = median(3,4))
my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday'))) %>%
ggplot() +
geom_histogram(mapping = aes(pred_delay, fill = V2), bins = 50) +
geom_vline(xintercept = median(2,1,3))
input <- tibble(.rows = 1)
input$fly_date <- '2019-07-06'; input$hr <- 21; input$min <- 30
coef <- tibble(mn = c(-0.86897399, 0.13248559, 0.09383102,
0.15231776, 0.31235699, 0.32355042,
0.09799821, 0.26531381, 0.31624765),
se = c(0.0138170775, 0.0008950894, 0.0021244161,
0.0144519522, 0.0158520702, 0.0148300182,
0.0144242610, 0.0147171209, 0.0146681318))
my_norm <- tibble(.rows = 10000)
for(i in 1:9) my_norm[i] = rnorm(n = nrow(my_norm), mean = coef[[i, 1]], sd = coef[[1, 2]])
my_pred <- my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday')))
mdn_pred = median(my_pred$pred_delay)
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(pred_delay), bins = 50) +
geom_vline(xintercept = )
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay), bins = 50) +
geom_vline(xintercept = mdn_pred)
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay), bins = 50) +
ggtitle(mdn_pred)
tibble(mn = c(-0.86897399, 0.13248559, 0.09383102,
0.15231776, 0.31235699, 0.32355042,
0.09799821, 0.26531381, 0.31624765),
se = c(0.0138170775, 0.0008950894, 0.0021244161,
0.0144519522, 0.0158520702, 0.0148300182,
0.0144242610, 0.0147171209, 0.0146681318))
input <- tibble(.rows = 1)
input$fly_date <- '2019-07-06'; input$hr <- 21; input$min <- 30
coef <- tibble(mn = c(-0.86897399, 0.13248559, 0.09383102,
0.15231776, 0.31235699, 0.32355042,
0.09799821, 0.26531381, 0.31624765),
se = c(0.0138170775, 0.0008950894, 0.0021244161,
0.0144519522, 0.0158520702, 0.0148300182,
0.0144242610, 0.0147171209, 0.0146681318))
my_norm <- tibble(.rows = 10000)
for(i in 1:9) my_norm[i] = rnorm(n = nrow(my_norm), mean = coef[[i, 1]], sd = coef[[i, 2]])
my_pred <- my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday')))
mdn_pred = median(my_pred$pred_delay)
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay), bins = 50) +
ggtitle(mdn_pred)
tibble(mn = c(-0.86897399, 0.13248559, 0.09383102,
0.15231776, 0.31235699, 0.32355042,
0.09799821, 0.26531381, 0.31624765),
se = c(0.0138170775, 0.0008950894, 0.0021244161,
0.0144519522, 0.0158520702, 0.0148300182,
0.0144242610, 0.0147171209, 0.0146681318))
my_norm <- tibble(.rows = 10000)
for(i in 1:9) my_norm[i] = rnorm(n = nrow(my_norm), mean = coef[[i, 1]], sd = coef[[i, 2]])
for(i in 1:9) my_norm[i] = rnorm(n = nrow(my_norm), mean = coef[[i, 1]], sd = coef[[i, 2]])
my_norm
mdl$coefficients %>%
as_tibble() %>%
mutate(x_var = row.names(mdl$coefficients)) %>%
select(5, coef = 1, se = 2)
coefs <- mdl$coefficients %>%
as_tibble() %>%
mutate(x_var = row.names(mdl$coefficients)) %>%
select(5, coef = 1, se = 2)
coefs$coef
coefs$se
input <- tibble(.rows = 1)
input$fly_date <- '2019-07-06'; input$hr <- 21; input$min <- 30
coef <- tibble(mn = c(3.85236934, -0.06363243, -0.05417439, -0.06181426, -0.12503443, -0.17237966, -0.10804876, -0.04541431, -0.17399921),
se = c(0.0121161721, 0.0008861738, 0.0020117717, 0.0135075053, 0.0151832949, 0.0140442096, 0.0134079232, 0.0139179082, 0.0139245864))
my_norm <- tibble(.rows = 10000)
for(i in 1:9) my_norm[i] = rnorm(n = nrow(my_norm), mean = coef[[i, 1]], sd = coef[[i, 2]])
my_pred <- my_norm %>%
mutate(pred_delay = exp(V1 +
V2 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
V3 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
V4 * (weekdays(ymd(input$fly_date)) == 'Monday') +
V5 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
V6 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
V7 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
V8 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
V9 * (weekdays(ymd(input$fly_date)) == 'Wednesday')))
mdn_pred = median(my_pred$pred_delay)
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay), bins = 50) +
ggtitle(mdn_pred)
p_on_time <- 1 /
(1 + exp(-(-0.868973986936626 +
0.132485588024036 * abs(input$hr + (input$min + 0.5) / 60 - 21.45) +
0.0938310236036926 * abs(month(ymd(input$fly_date)) + (day(ymd(input$fly_date)) - 0.5) / (days_in_month(ymd(input$fly_date))) - 5.31) +
0.152317762763714 * (weekdays(ymd(input$fly_date)) == 'Monday') +
0.312356993431681 * (weekdays(ymd(input$fly_date)) == 'Saturday') +
0.323550415257237 * (weekdays(ymd(input$fly_date)) == 'Sunday') +
0.0979982073199806 * (weekdays(ymd(input$fly_date)) == 'Thursday') +
0.265313809910303 * (weekdays(ymd(input$fly_date)) == 'Tuesday') +
0.316247648362565 * (weekdays(ymd(input$fly_date)) == 'Wednesday'))))
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay), bins = 50) +
ggtitle(paste(mdn_pred,p_on_time))
runif(10000) > p_on_time
color_on_time <- runif(10000) > p_on_time
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay, color = color_on_time), bins = 50) +
ggtitle(paste(mdn_pred,p_on_time))
color_on_time <- runif(10000) < p_on_time
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay, color = color_on_time), bins = 50) +
ggtitle(paste(mdn_pred,p_on_time))
is_on_time <- runif(10000) < p_on_time
is_delayed <- runif(10000) < p_on_time
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay, color = is_delayed), bins = 50) +
ggtitle(paste(mdn_pred,p_on_time))
is_delayed <- runif(10000) < p_on_time
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay, fill = is_delayed), bins = 50) +
ggtitle(paste(mdn_pred,p_on_time))
is_delayed <- runif(10000) < p_on_time
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay, fill = is_delayed), bins = 50) +
ggtitle(paste(mdn_pred,p_on_time)) +
theme_fivethirtyeight() +
scale_fill_fivethirtyeight()
is_delayed <- runif(10000) < p_on_time
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay, color = is_delayed), bins = 50) +
ggtitle(paste(mdn_pred,p_on_time)) +
theme_fivethirtyeight() +
scale_color_fivethirtyeight()
is_delayed <- runif(10000) < p_on_time
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay, color = is_delayed), bins = 50) +
ggtitle(paste(round(100*p_on_time),'% chance on-time, otherwise around',mdn_pred,'min. delayed')) +
theme_fivethirtyeight() +
scale_color_fivethirtyeight()
is_delayed <- runif(10000) < p_on_time
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay, color = is_delayed), bins = 50) +
ggtitle(paste(round(100*p_on_time),'percent chance of an on-time departure'), paste('But if delayed will be around',mdn_pred,'min. delayed')) +
theme_fivethirtyeight() +
scale_color_fivethirtyeight()
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay, color = is_delayed), bins = 50) +
ggtitle(paste(round(100*p_on_time),'percent chance of an on-time departure'),
paste('But if not delay will be around',round(mdn_pred),'minutes')) +
theme_fivethirtyeight() +
scale_color_fivethirtyeight()
is_delayed <- runif(10000) < p_on_time
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay, color = is_delayed), bins = 50) +
ggtitle(paste(round(100*p_on_time),'percent chance of on-time departure'),
paste('But if delayed it will be around',round(mdn_pred),'minutes')) +
theme_fivethirtyeight() +
scale_color_fivethirtyeight()
is_delayed <- runif(10000) < p_on_time
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay, color = is_delayed), bins = 50) +
ggtitle(paste('Chance of on-time departure is',round(100*p_on_time),'percent'),
paste('But if there is a delay it will be around',round(mdn_pred),'minutes')) +
theme_fivethirtyeight() +
scale_color_fivethirtyeight()
library(rsconnect)
install.packages('rsconnect')
library(rsconnect)
rsconnect::setAccountInfo(name='mariobonifacio', token='C9E70861C2670F6AC33F9FE362592733', secret='DZGGIqH5ZtT6mSidmTyrD+/ZrfJrPmW8iIvRM8SH')
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay, fill = is_delayed), bins = 50) +
ggtitle(paste('Chance of on-time departure is',round(100*p_on_time),'percent'),
paste('But if there is a delay it will be around',round(mdn_pred),'minutes')) +
theme_fivethirtyeight() +
scale_color_fivethirtyeight() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.title = element_blank()) +
scale_fill_manual(values = c('lightgray','darkred'))
my_pred %>%
ggplot() +
geom_histogram(mapping = aes(my_pred$pred_delay, fill = is_delayed, color = is_delayed), bins = 50) +
ggtitle(paste(sep = '', 'Chance of taking off on time is ',
round(100*p_on_time),'%'),
paste('But if there is a delay it will be around',round(mdn_pred),'minutes')) +
theme_fivethirtyeight() +
scale_color_fivethirtyeight() +
theme(axis.title.x = element_text('d'),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.title = element_blank()) +
scale_fill_manual(values = c('lightgray','darkred'), aesthetics = 'fill') +
scale_color_manual(values = c('darkgray','black'), aesthetics = 'color')
install.packages(c("DiagrammeR", "Rook", "XML"))
install.packages(c("brew", "downloader", "gridE"))
install.packages(c("gridExtra", "htmlwidgets", "igraph", "influenceR", "pander"))
install.packages(c("dbplyr", "openssl", "RJSONIO", "tibble", "XML"))
install.packages(c("dbplyr", "openssl", "RJSONIO", "tibble", "XML"))
install.packages(c("dbplyr", "openssl", "RJSONIO", "tibble", "XML"))
install.packages(c("dbplyr", "openssl", "RJSONIO", "tibble", "XML"))
install.packages(c("dbplyr", "openssl", "RJSONIO", "tibble", "XML"))
install.packages(c("dbplyr", "openssl", "RJSONIO", "tibble", "XML"))
install.packages(c("dbplyr", "openssl", "RJSONIO", "tibble", "XML"))
install.packages(c("dbplyr", "openssl", "RJSONIO", "tibble", "XML"))
install.packages(c("dbplyr", "openssl", "RJSONIO", "tibble", "XML"))
install.packages(c("dbplyr", "openssl", "RJSONIO", "tibble", "XML"))
install.packages(c("dbplyr", "openssl", "RJSONIO", "tibble", "XML"))
install.packages(c("RJSONIO", "XML"))
install.packages("tibble")
install.packages("tibble")
install.packages(c("markdown", "RJSONIO", "tibble", "XML"))
library(shiny); library(lubridate); library(tidyverse); library(ggthemes)
library(shiny); library(lubridate); library(tidyverse); library(ggthemes)
library(shiny)
library(lubridate)
library(tidyverse)
library(ggthemes)
install.packages("tibble")
library(ggthemes)
library(tibble)
library("tidyverse", lib.loc="~/R/win-library/3.5")
library(tibble)
install.packages(c("markdown", "RJSONIO", "XML"))
library("ggthemes", lib.loc="~/R/win-library/3.5")
knitr::opts_chunk$set(message = FALSE)
library(tidyverse); library(lubridate); library(ggalluvial); library(ggthemes); library(nycflights13); library(moments)
install.packages("ggalluvial")
install.packages("ggthemes")
install.packages("nycflights13")
install.packages("moments")
library(tidyverse); library(lubridate); library(ggalluvial); library(ggthemes); library(nycflights13); library(moments)
write.csv(x = flights_17,
file = 'flights_17.csv',
sep = ',')
load("C:/Users/Mario/Downloads/planes.rda")
load("C:/Users/Mario/Downloads/weather.rda")
read_csv2(file = 'flights_17.csv', na = 'NULL', trim_ws = T)
read_csv(file = 'flights_17.csv', na = 'NULL', trim_ws = T)
weather
View(planes)
planes
read_csv(file = 'flights_17.csv', na = 'NULL', trim_ws = T) %>%
select(dep_delay, carrier, flight, tailnum, origin, dest, air_time, time_hour) %>%
left_join(y = (weather %>%
select(-(1:5))),
by = c(origin, time_hour)) %>%
left_join(y = (planes %>%
select(tailnum, plane_yr = year, type, manufacturer, model, engines, seats, speed, engine)),
by = tailnum)
read_csv(file = 'flights_17.csv', na = 'NULL', trim_ws = T) %>%
select(dep_delay, carrier, flight, tailnum, origin, dest, air_time, time_hour)
read_csv(file = 'flights_17.csv', na = 'NULL', trim_ws = T) %>%
select(dep_delay, carrier, flight, tailnum, origin, dest, air_time, time_hour) %>%
left_join(y = (weather %>%
select(-(1:5))),
by = c(origin, time_hour))
fly <- (read_csv(file = 'flights_17.csv', na = 'NULL', trim_ws = T) %>%
select(dep_delay, carrier, flight, tailnum, origin, dest, air_time, time_hour))
fly
left_join(x = fly,
y = (weather %>%
select(-(1:5))),
by = c(origin, time_hour))
left_join(x = fly,
y = (weather %>%
select(-(1:5))),
by = c(origin, time_hour))
fly
?left_join
left_join(x = fly,
y = (weather %>%
select(-(1:5))),
origin, time_hour)
weather %>%
select(-(1:5))
weather
left_join(x = fly,
y = (weather %>%
select(-(2:5))),
by = c(origin, time_hour))
fly
left_join(x = fly,
y = (weather %>%
select(-(2:5))))
left_join(x = fly,
y = (weather %>%
select(-(2:5)))) %>%
left_join(y = (planes %>%
select(tailnum, plane_yr = year, type, manufacturer, model, engines, seats, speed, engine)),
by = tailnum)
left_join(x = fly,
y = (weather %>%
select(-(2:5)))) %>%
left_join(y = (planes %>%
select(tailnum, plane_yr = year, type, manufacturer, model, engines, seats, speed, engine)))
setwd("~/mariobonifacio.github.io")
write_rds(x =
left_join(x = fly,
y = (weather %>%
select(-(2:5)))) %>%
left_join(y = (planes %>%
select(tailnum, plane_yr = year, type, manufacturer, model, engines, seats, speed, engine))),
path = 'fly_wide_17.rds'
)
